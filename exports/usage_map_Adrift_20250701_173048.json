{
  "timestamp": "20250701_173048",
  "project_name": "Adrift",
  "usage_map": {
    "definitions.actor": {
      "used_by": [],
      "uses": [
        "definitions.actor.initialize_skill_if_missing",
        "definitions.actor.initialize_technique_if_missing",
        "helpers.actor_helpers.initialize_skill_if_missing",
        "helpers.actor_helpers.initialize_technique_if_missing"
      ]
    },
    "definitions.actor.initialize_skill_if_missing": {
      "used_by": [
        "definitions.actor",
        "definitions.actor.Actor",
        "definitions.actor.add_skill",
        "definitions.actor.add_technique",
        "definitions.actor.initialize_skill_if_missing",
        "definitions.actor.initialize_technique_if_missing",
        "definitions.actor.__init__",
        "definitions.actor.has_skill",
        "definitions.actor.has_technique",
        "definitions.actor.get_technique",
        "utils.skill_xp_utils",
        "utils.skill_xp_utils.track_xp_gain",
        "utils.skill_xp_utils._tags_match",
        "utils.skill_xp_utils._check_level_up"
      ],
      "uses": [
        "definitions.actor.initialize_skill_if_missing",
        "definitions.actor.initialize_technique_if_missing",
        "helpers.actor_helpers.initialize_skill_if_missing",
        "helpers.actor_helpers.initialize_technique_if_missing"
      ]
    },
    "definitions.actor.initialize_technique_if_missing": {
      "used_by": [
        "definitions.actor",
        "definitions.actor.Actor",
        "definitions.actor.add_skill",
        "definitions.actor.add_technique",
        "definitions.actor.initialize_skill_if_missing",
        "definitions.actor.initialize_technique_if_missing",
        "definitions.actor.__init__",
        "definitions.actor.has_skill",
        "definitions.actor.has_technique",
        "definitions.actor.get_technique",
        "utils.skill_xp_utils",
        "utils.skill_xp_utils.track_xp_gain",
        "utils.skill_xp_utils._tags_match",
        "utils.skill_xp_utils._check_level_up"
      ],
      "uses": [
        "definitions.actor.initialize_skill_if_missing",
        "definitions.actor.initialize_technique_if_missing",
        "helpers.actor_helpers.initialize_skill_if_missing",
        "helpers.actor_helpers.initialize_technique_if_missing"
      ]
    },
    "helpers.actor_helpers.initialize_skill_if_missing": {
      "used_by": [
        "definitions.actor",
        "definitions.actor.Actor",
        "definitions.actor.add_skill",
        "definitions.actor.add_technique",
        "definitions.actor.initialize_skill_if_missing",
        "definitions.actor.initialize_technique_if_missing",
        "definitions.actor.__init__",
        "definitions.actor.has_skill",
        "definitions.actor.has_technique",
        "definitions.actor.get_technique",
        "utils.skill_xp_utils",
        "utils.skill_xp_utils.track_xp_gain",
        "utils.skill_xp_utils._tags_match",
        "utils.skill_xp_utils._check_level_up"
      ],
      "uses": []
    },
    "helpers.actor_helpers.initialize_technique_if_missing": {
      "used_by": [
        "definitions.actor",
        "definitions.actor.Actor",
        "definitions.actor.add_skill",
        "definitions.actor.add_technique",
        "definitions.actor.initialize_skill_if_missing",
        "definitions.actor.initialize_technique_if_missing",
        "definitions.actor.__init__",
        "definitions.actor.has_skill",
        "definitions.actor.has_technique",
        "definitions.actor.get_technique",
        "utils.skill_xp_utils",
        "utils.skill_xp_utils.track_xp_gain",
        "utils.skill_xp_utils._tags_match",
        "utils.skill_xp_utils._check_level_up"
      ],
      "uses": []
    },
    "definitions.actor.Actor": {
      "used_by": [],
      "uses": [
        "definitions.actor.initialize_skill_if_missing",
        "definitions.actor.initialize_technique_if_missing",
        "helpers.actor_helpers.initialize_skill_if_missing",
        "helpers.actor_helpers.initialize_technique_if_missing"
      ]
    },
    "definitions.actor.add_skill": {
      "used_by": [],
      "uses": [
        "definitions.actor.initialize_skill_if_missing",
        "definitions.actor.initialize_technique_if_missing",
        "helpers.actor_helpers.initialize_skill_if_missing",
        "helpers.actor_helpers.initialize_technique_if_missing"
      ]
    },
    "definitions.actor.add_technique": {
      "used_by": [
        "utils.technique_unlock_utils",
        "utils.technique_unlock_utils.auto_unlock_techniques"
      ],
      "uses": [
        "definitions.actor.initialize_skill_if_missing",
        "definitions.actor.initialize_technique_if_missing",
        "helpers.actor_helpers.initialize_skill_if_missing",
        "helpers.actor_helpers.initialize_technique_if_missing"
      ]
    },
    "definitions.actor.__init__": {
      "used_by": [],
      "uses": [
        "definitions.actor.initialize_skill_if_missing",
        "definitions.actor.initialize_technique_if_missing",
        "helpers.actor_helpers.initialize_skill_if_missing",
        "helpers.actor_helpers.initialize_technique_if_missing"
      ]
    },
    "definitions.actor.has_skill": {
      "used_by": [],
      "uses": [
        "definitions.actor.initialize_skill_if_missing",
        "definitions.actor.initialize_technique_if_missing",
        "helpers.actor_helpers.initialize_skill_if_missing",
        "helpers.actor_helpers.initialize_technique_if_missing"
      ]
    },
    "definitions.actor.has_technique": {
      "used_by": [],
      "uses": [
        "definitions.actor.initialize_skill_if_missing",
        "definitions.actor.initialize_technique_if_missing",
        "helpers.actor_helpers.initialize_skill_if_missing",
        "helpers.actor_helpers.initialize_technique_if_missing"
      ]
    },
    "definitions.actor.get_technique": {
      "used_by": [],
      "uses": [
        "definitions.actor.initialize_skill_if_missing",
        "definitions.actor.initialize_technique_if_missing",
        "helpers.actor_helpers.initialize_skill_if_missing",
        "helpers.actor_helpers.initialize_technique_if_missing"
      ]
    },
    "definitions.evolution_offer_generator": {
      "used_by": [],
      "uses": [
        "definitions.evolution_offer_generator._generate_base_technique",
        "utils.technique_utils.evolve_technique",
        "utils.technique_utils.generate_technique"
      ]
    },
    "definitions.evolution_offer_generator._generate_base_technique": {
      "used_by": [
        "definitions.evolution_offer_generator",
        "definitions.evolution_offer_generator.generate_evolution_offer",
        "definitions.evolution_offer_generator._generate_base_technique"
      ],
      "uses": [
        "definitions.evolution_offer_generator._generate_base_technique",
        "utils.technique_utils.evolve_technique",
        "utils.technique_utils.generate_technique"
      ]
    },
    "utils.technique_utils.evolve_technique": {
      "used_by": [
        "definitions.evolution_offer_generator",
        "definitions.evolution_offer_generator.generate_evolution_offer",
        "definitions.evolution_offer_generator._generate_base_technique"
      ],
      "uses": [
        "utils.technique_utils.evolve_add_effect",
        "utils.technique_utils.evolve_add_modifier",
        "utils.technique_utils.evolve_replace_effect"
      ]
    },
    "utils.technique_utils.generate_technique": {
      "used_by": [
        "definitions.evolution_offer_generator",
        "definitions.evolution_offer_generator.generate_evolution_offer",
        "definitions.evolution_offer_generator._generate_base_technique"
      ],
      "uses": [
        "utils.technique_utils.evolve_add_effect",
        "utils.technique_utils.evolve_add_modifier",
        "utils.technique_utils.evolve_replace_effect"
      ]
    },
    "definitions.evolution_offer_generator.generate_evolution_offer": {
      "used_by": [
        "flow.actor_mutation_flow",
        "flow.actor_mutation_flow.get_mutation_offer",
        "flow.actor_mutation_flow.can_offer_boost",
        "flow.actor_mutation_flow.apply_boost",
        "flow.actor_mutation_flow.apply_mutation_choice",
        "flow.actor_mutation_flow.handle_pending_mutation_offer",
        "flow.actor_mutation_flow.handle_post_action_mutation",
        "flow.actor_mutation_flow._boost_level_to_rarity",
        "utils.actor_offer_utils",
        "utils.actor_offer_utils.generate_evolution_offer_for_actor",
        "utils.actor_offer_utils._boost_level_to_rarity",
        "utils.evolution_offer_utils",
        "utils.evolution_offer_utils.get_allowed_rarities",
        "utils.evolution_offer_utils.generate_evolution_offer_for_actor"
      ],
      "uses": [
        "definitions.evolution_offer_generator._generate_base_technique",
        "utils.technique_utils.evolve_technique",
        "utils.technique_utils.generate_technique"
      ]
    },
    "definitions.floorplan": {
      "used_by": [],
      "uses": [
        "definitions.floorplan.create_empty_tile"
      ]
    },
    "definitions.floorplan.create_empty_tile": {
      "used_by": [
        "definitions.floorplan",
        "definitions.floorplan.Coord",
        "definitions.floorplan.Tile",
        "definitions.floorplan.create_empty_tile",
        "definitions.floorplan.create_floorplan",
        "definitions.floorplan.get_tile",
        "definitions.floorplan.set_tile"
      ],
      "uses": [
        "definitions.floorplan.create_empty_tile"
      ]
    },
    "definitions.floorplan.Coord": {
      "used_by": [],
      "uses": [
        "definitions.floorplan.create_empty_tile"
      ]
    },
    "definitions.floorplan.Tile": {
      "used_by": [],
      "uses": [
        "definitions.floorplan.create_empty_tile"
      ]
    },
    "definitions.floorplan.create_floorplan": {
      "used_by": [
        "flow.engine",
        "flow.engine.enter_test_map"
      ],
      "uses": [
        "definitions.floorplan.create_empty_tile"
      ]
    },
    "definitions.floorplan.get_tile": {
      "used_by": [
        "flow.engine",
        "flow.engine.enter_test_map"
      ],
      "uses": [
        "definitions.floorplan.create_empty_tile"
      ]
    },
    "definitions.floorplan.set_tile": {
      "used_by": [
        "flow.engine",
        "flow.engine.enter_test_map"
      ],
      "uses": [
        "definitions.floorplan.create_empty_tile"
      ]
    },
    "flow.action_flow": {
      "used_by": [],
      "uses": [
        "flow.actor_mutation_flow.handle_post_action_mutation",
        "utils.skill_xp_utils.track_xp_gain",
        "utils.technique_unlock_utils.auto_unlock_techniques"
      ]
    },
    "flow.actor_mutation_flow.handle_post_action_mutation": {
      "used_by": [
        "flow.action_flow",
        "flow.action_flow.run_action_phase"
      ],
      "uses": [
        "definitions.evolution_offer_generator.generate_evolution_offer",
        "flow.actor_mutation_flow._boost_level_to_rarity",
        "flow.actor_mutation_flow.apply_mutation_choice",
        "flow.actor_mutation_flow.can_offer_boost",
        "utils.actor_offer_utils._boost_level_to_rarity",
        "utils.actor_offer_utils.generate_evolution_offer_for_actor",
        "utils.evolution_offer_utils.generate_evolution_offer_for_actor",
        "utils.technique_mutation_utils.generate_evolution_offer"
      ]
    },
    "utils.skill_xp_utils.track_xp_gain": {
      "used_by": [
        "flow.action_flow",
        "flow.action_flow.run_action_phase"
      ],
      "uses": [
        "definitions.actor.initialize_skill_if_missing",
        "definitions.actor.initialize_technique_if_missing",
        "helpers.actor_helpers.initialize_skill_if_missing",
        "helpers.actor_helpers.initialize_technique_if_missing",
        "utils.skill_xp_utils._check_level_up",
        "utils.skill_xp_utils._tags_match"
      ]
    },
    "utils.technique_unlock_utils.auto_unlock_techniques": {
      "used_by": [
        "flow.action_flow",
        "flow.action_flow.run_action_phase"
      ],
      "uses": [
        "definitions.actor.add_technique"
      ]
    },
    "flow.action_flow.run_action_phase": {
      "used_by": [],
      "uses": [
        "flow.actor_mutation_flow.handle_post_action_mutation",
        "utils.skill_xp_utils.track_xp_gain",
        "utils.technique_unlock_utils.auto_unlock_techniques"
      ]
    },
    "flow.actor_mutation_flow": {
      "used_by": [],
      "uses": [
        "definitions.evolution_offer_generator.generate_evolution_offer",
        "flow.actor_mutation_flow._boost_level_to_rarity",
        "flow.actor_mutation_flow.apply_mutation_choice",
        "flow.actor_mutation_flow.can_offer_boost",
        "utils.actor_offer_utils._boost_level_to_rarity",
        "utils.actor_offer_utils.generate_evolution_offer_for_actor",
        "utils.evolution_offer_utils.generate_evolution_offer_for_actor",
        "utils.technique_mutation_utils.generate_evolution_offer"
      ]
    },
    "flow.actor_mutation_flow._boost_level_to_rarity": {
      "used_by": [
        "flow.actor_mutation_flow",
        "flow.actor_mutation_flow.get_mutation_offer",
        "flow.actor_mutation_flow.can_offer_boost",
        "flow.actor_mutation_flow.apply_boost",
        "flow.actor_mutation_flow.apply_mutation_choice",
        "flow.actor_mutation_flow.handle_pending_mutation_offer",
        "flow.actor_mutation_flow.handle_post_action_mutation",
        "flow.actor_mutation_flow._boost_level_to_rarity",
        "utils.actor_offer_utils",
        "utils.actor_offer_utils.generate_evolution_offer_for_actor",
        "utils.actor_offer_utils._boost_level_to_rarity"
      ],
      "uses": [
        "definitions.evolution_offer_generator.generate_evolution_offer",
        "flow.actor_mutation_flow._boost_level_to_rarity",
        "flow.actor_mutation_flow.apply_mutation_choice",
        "flow.actor_mutation_flow.can_offer_boost",
        "utils.actor_offer_utils._boost_level_to_rarity",
        "utils.actor_offer_utils.generate_evolution_offer_for_actor",
        "utils.evolution_offer_utils.generate_evolution_offer_for_actor",
        "utils.technique_mutation_utils.generate_evolution_offer"
      ]
    },
    "flow.actor_mutation_flow.apply_mutation_choice": {
      "used_by": [
        "flow.actor_mutation_flow",
        "flow.actor_mutation_flow.get_mutation_offer",
        "flow.actor_mutation_flow.can_offer_boost",
        "flow.actor_mutation_flow.apply_boost",
        "flow.actor_mutation_flow.apply_mutation_choice",
        "flow.actor_mutation_flow.handle_pending_mutation_offer",
        "flow.actor_mutation_flow.handle_post_action_mutation",
        "flow.actor_mutation_flow._boost_level_to_rarity"
      ],
      "uses": [
        "definitions.evolution_offer_generator.generate_evolution_offer",
        "flow.actor_mutation_flow._boost_level_to_rarity",
        "flow.actor_mutation_flow.apply_mutation_choice",
        "flow.actor_mutation_flow.can_offer_boost",
        "utils.actor_offer_utils._boost_level_to_rarity",
        "utils.actor_offer_utils.generate_evolution_offer_for_actor",
        "utils.evolution_offer_utils.generate_evolution_offer_for_actor",
        "utils.technique_mutation_utils.generate_evolution_offer"
      ]
    },
    "flow.actor_mutation_flow.can_offer_boost": {
      "used_by": [
        "flow.actor_mutation_flow",
        "flow.actor_mutation_flow.get_mutation_offer",
        "flow.actor_mutation_flow.can_offer_boost",
        "flow.actor_mutation_flow.apply_boost",
        "flow.actor_mutation_flow.apply_mutation_choice",
        "flow.actor_mutation_flow.handle_pending_mutation_offer",
        "flow.actor_mutation_flow.handle_post_action_mutation",
        "flow.actor_mutation_flow._boost_level_to_rarity"
      ],
      "uses": [
        "definitions.evolution_offer_generator.generate_evolution_offer",
        "flow.actor_mutation_flow._boost_level_to_rarity",
        "flow.actor_mutation_flow.apply_mutation_choice",
        "flow.actor_mutation_flow.can_offer_boost",
        "utils.actor_offer_utils._boost_level_to_rarity",
        "utils.actor_offer_utils.generate_evolution_offer_for_actor",
        "utils.evolution_offer_utils.generate_evolution_offer_for_actor",
        "utils.technique_mutation_utils.generate_evolution_offer"
      ]
    },
    "utils.actor_offer_utils._boost_level_to_rarity": {
      "used_by": [
        "flow.actor_mutation_flow",
        "flow.actor_mutation_flow.get_mutation_offer",
        "flow.actor_mutation_flow.can_offer_boost",
        "flow.actor_mutation_flow.apply_boost",
        "flow.actor_mutation_flow.apply_mutation_choice",
        "flow.actor_mutation_flow.handle_pending_mutation_offer",
        "flow.actor_mutation_flow.handle_post_action_mutation",
        "flow.actor_mutation_flow._boost_level_to_rarity",
        "utils.actor_offer_utils",
        "utils.actor_offer_utils.generate_evolution_offer_for_actor",
        "utils.actor_offer_utils._boost_level_to_rarity"
      ],
      "uses": [
        "definitions.evolution_offer_generator.generate_evolution_offer",
        "flow.actor_mutation_flow._boost_level_to_rarity",
        "utils.actor_offer_utils._boost_level_to_rarity",
        "utils.technique_mutation_utils.generate_evolution_offer"
      ]
    },
    "utils.actor_offer_utils.generate_evolution_offer_for_actor": {
      "used_by": [
        "flow.actor_mutation_flow",
        "flow.actor_mutation_flow.get_mutation_offer",
        "flow.actor_mutation_flow.can_offer_boost",
        "flow.actor_mutation_flow.apply_boost",
        "flow.actor_mutation_flow.apply_mutation_choice",
        "flow.actor_mutation_flow.handle_pending_mutation_offer",
        "flow.actor_mutation_flow.handle_post_action_mutation",
        "flow.actor_mutation_flow._boost_level_to_rarity"
      ],
      "uses": [
        "definitions.evolution_offer_generator.generate_evolution_offer",
        "flow.actor_mutation_flow._boost_level_to_rarity",
        "utils.actor_offer_utils._boost_level_to_rarity",
        "utils.technique_mutation_utils.generate_evolution_offer"
      ]
    },
    "utils.evolution_offer_utils.generate_evolution_offer_for_actor": {
      "used_by": [
        "flow.actor_mutation_flow",
        "flow.actor_mutation_flow.get_mutation_offer",
        "flow.actor_mutation_flow.can_offer_boost",
        "flow.actor_mutation_flow.apply_boost",
        "flow.actor_mutation_flow.apply_mutation_choice",
        "flow.actor_mutation_flow.handle_pending_mutation_offer",
        "flow.actor_mutation_flow.handle_post_action_mutation",
        "flow.actor_mutation_flow._boost_level_to_rarity"
      ],
      "uses": [
        "definitions.evolution_offer_generator.generate_evolution_offer",
        "utils.evolution_offer_utils.get_allowed_rarities",
        "utils.technique_mutation_utils.generate_evolution_offer"
      ]
    },
    "utils.technique_mutation_utils.generate_evolution_offer": {
      "used_by": [
        "flow.actor_mutation_flow",
        "flow.actor_mutation_flow.get_mutation_offer",
        "flow.actor_mutation_flow.can_offer_boost",
        "flow.actor_mutation_flow.apply_boost",
        "flow.actor_mutation_flow.apply_mutation_choice",
        "flow.actor_mutation_flow.handle_pending_mutation_offer",
        "flow.actor_mutation_flow.handle_post_action_mutation",
        "flow.actor_mutation_flow._boost_level_to_rarity",
        "utils.actor_offer_utils",
        "utils.actor_offer_utils.generate_evolution_offer_for_actor",
        "utils.actor_offer_utils._boost_level_to_rarity",
        "utils.evolution_offer_utils",
        "utils.evolution_offer_utils.get_allowed_rarities",
        "utils.evolution_offer_utils.generate_evolution_offer_for_actor"
      ],
      "uses": []
    },
    "flow.actor_mutation_flow.get_mutation_offer": {
      "used_by": [],
      "uses": [
        "definitions.evolution_offer_generator.generate_evolution_offer",
        "flow.actor_mutation_flow._boost_level_to_rarity",
        "flow.actor_mutation_flow.apply_mutation_choice",
        "flow.actor_mutation_flow.can_offer_boost",
        "utils.actor_offer_utils._boost_level_to_rarity",
        "utils.actor_offer_utils.generate_evolution_offer_for_actor",
        "utils.evolution_offer_utils.generate_evolution_offer_for_actor",
        "utils.technique_mutation_utils.generate_evolution_offer"
      ]
    },
    "flow.actor_mutation_flow.apply_boost": {
      "used_by": [],
      "uses": [
        "definitions.evolution_offer_generator.generate_evolution_offer",
        "flow.actor_mutation_flow._boost_level_to_rarity",
        "flow.actor_mutation_flow.apply_mutation_choice",
        "flow.actor_mutation_flow.can_offer_boost",
        "utils.actor_offer_utils._boost_level_to_rarity",
        "utils.actor_offer_utils.generate_evolution_offer_for_actor",
        "utils.evolution_offer_utils.generate_evolution_offer_for_actor",
        "utils.technique_mutation_utils.generate_evolution_offer"
      ]
    },
    "flow.actor_mutation_flow.handle_pending_mutation_offer": {
      "used_by": [],
      "uses": [
        "definitions.evolution_offer_generator.generate_evolution_offer",
        "flow.actor_mutation_flow._boost_level_to_rarity",
        "flow.actor_mutation_flow.apply_mutation_choice",
        "flow.actor_mutation_flow.can_offer_boost",
        "utils.actor_offer_utils._boost_level_to_rarity",
        "utils.actor_offer_utils.generate_evolution_offer_for_actor",
        "utils.evolution_offer_utils.generate_evolution_offer_for_actor",
        "utils.technique_mutation_utils.generate_evolution_offer"
      ]
    },
    "flow.engine": {
      "used_by": [],
      "uses": [
        "definitions.floorplan.create_floorplan",
        "definitions.floorplan.get_tile",
        "definitions.floorplan.set_tile",
        "flow.engine.enter_test_map"
      ]
    },
    "flow.engine.enter_test_map": {
      "used_by": [
        "flow.engine",
        "flow.engine.enter_test_map"
      ],
      "uses": [
        "definitions.floorplan.create_floorplan",
        "definitions.floorplan.get_tile",
        "definitions.floorplan.set_tile",
        "flow.engine.enter_test_map"
      ]
    },
    "utils.actor_mutation_utils": {
      "used_by": [],
      "uses": [
        "utils.technique_mutation_utils.apply_mutation"
      ]
    },
    "utils.technique_mutation_utils.apply_mutation": {
      "used_by": [
        "utils.actor_mutation_utils",
        "utils.actor_mutation_utils.apply_mutation_to_actor"
      ],
      "uses": []
    },
    "utils.actor_mutation_utils.apply_mutation_to_actor": {
      "used_by": [],
      "uses": [
        "utils.technique_mutation_utils.apply_mutation"
      ]
    },
    "utils.actor_offer_utils": {
      "used_by": [],
      "uses": [
        "definitions.evolution_offer_generator.generate_evolution_offer",
        "flow.actor_mutation_flow._boost_level_to_rarity",
        "utils.actor_offer_utils._boost_level_to_rarity",
        "utils.technique_mutation_utils.generate_evolution_offer"
      ]
    },
    "utils.cover_utils": {
      "used_by": [],
      "uses": [
        "utils.cover_utils.get_cover_objects_along_path"
      ]
    },
    "utils.cover_utils.get_cover_objects_along_path": {
      "used_by": [
        "utils.cover_utils",
        "utils.cover_utils.get_cover_objects_along_path",
        "utils.cover_utils.calculate_total_cover"
      ],
      "uses": [
        "utils.cover_utils.get_cover_objects_along_path"
      ]
    },
    "utils.cover_utils.calculate_total_cover": {
      "used_by": [],
      "uses": [
        "utils.cover_utils.get_cover_objects_along_path"
      ]
    },
    "utils.evolution_offer_utils": {
      "used_by": [],
      "uses": [
        "definitions.evolution_offer_generator.generate_evolution_offer",
        "utils.evolution_offer_utils.get_allowed_rarities",
        "utils.technique_mutation_utils.generate_evolution_offer"
      ]
    },
    "utils.evolution_offer_utils.get_allowed_rarities": {
      "used_by": [
        "utils.evolution_offer_utils",
        "utils.evolution_offer_utils.get_allowed_rarities",
        "utils.evolution_offer_utils.generate_evolution_offer_for_actor"
      ],
      "uses": [
        "definitions.evolution_offer_generator.generate_evolution_offer",
        "utils.evolution_offer_utils.get_allowed_rarities",
        "utils.technique_mutation_utils.generate_evolution_offer"
      ]
    },
    "utils.general_utils": {
      "used_by": [],
      "uses": [
        "utils.general_utils.validate_tags"
      ]
    },
    "utils.general_utils.validate_tags": {
      "used_by": [
        "utils.general_utils",
        "utils.general_utils.validate_tags",
        "utils.general_utils.validate_all_tags",
        "utils.general_utils.trace_line",
        "utils.general_utils.compute_visibility_penalty_along_path"
      ],
      "uses": [
        "utils.general_utils.validate_tags"
      ]
    },
    "utils.general_utils.validate_all_tags": {
      "used_by": [],
      "uses": [
        "utils.general_utils.validate_tags"
      ]
    },
    "utils.general_utils.trace_line": {
      "used_by": [
        "utils.test_trace_line",
        "utils.test_trace_line.make_blank_tile",
        "utils.test_trace_line.test_straight_line_unblocked",
        "utils.test_trace_line.test_diagonal_line_with_blocking_tile",
        "utils.test_trace_line.test_tile_with_blocking_thing",
        "utils.test_trace_line.test_missing_tile_skipped",
        "utils.test_visibility_penalty",
        "utils.test_visibility_penalty.make_tile_with_env",
        "utils.test_visibility_penalty.test_no_environment_penalty",
        "utils.test_visibility_penalty.test_single_fog_tile",
        "utils.test_visibility_penalty.test_multiple_penalty_sources",
        "utils.test_visibility_penalty.test_missing_env_field",
        "utils.test_visibility_penalty.test_empty_path",
        "utils.test_visibility_penalty.test_invalid_path_type",
        "utils.test_visibility_penalty.test_step_not_dict",
        "utils.test_visibility_penalty.test_missing_tile_dict",
        "utils.test_visibility_penalty.test_env_not_list"
      ],
      "uses": [
        "utils.general_utils.validate_tags"
      ]
    },
    "utils.general_utils.compute_visibility_penalty_along_path": {
      "used_by": [
        "utils.test_visibility_penalty",
        "utils.test_visibility_penalty.make_tile_with_env",
        "utils.test_visibility_penalty.test_no_environment_penalty",
        "utils.test_visibility_penalty.test_single_fog_tile",
        "utils.test_visibility_penalty.test_multiple_penalty_sources",
        "utils.test_visibility_penalty.test_missing_env_field",
        "utils.test_visibility_penalty.test_empty_path",
        "utils.test_visibility_penalty.test_invalid_path_type",
        "utils.test_visibility_penalty.test_step_not_dict",
        "utils.test_visibility_penalty.test_missing_tile_dict",
        "utils.test_visibility_penalty.test_env_not_list"
      ],
      "uses": [
        "utils.general_utils.validate_tags"
      ]
    },
    "utils.movement_utils": {
      "used_by": [],
      "uses": [
        "utils.debug_utils.debug",
        "utils.movement_utils.find_path_between_zones",
        "utils.movement_utils.get_zone_by_feature",
        "utils.movement_utils.move_actor_to_zone",
        "utils.movement_utils.resolve_target_to_zone"
      ]
    },
    "utils.debug_utils.debug": {
      "used_by": [
        "utils.movement_utils",
        "utils.movement_utils.move_actor_to_zone",
        "utils.movement_utils.get_zone_by_feature",
        "utils.movement_utils.resolve_target_to_zone",
        "utils.movement_utils.find_path_between_zones",
        "utils.movement_utils.distance_between_zones",
        "utils.movement_utils.move_actor_toward_target",
        "utils.movement_utils.start_movement_to_target",
        "utils.movement_utils.advance_actor_movement",
        "utils.visibility_utils",
        "utils.visibility_utils.get_visibility_caps",
        "utils.visibility_utils.visual_coverage",
        "utils.visibility_utils.observe",
        "utils.visibility_utils.trace_visibility_path",
        "utils.visibility_utils.compute_visibility_penalty_along_path"
      ],
      "uses": []
    },
    "utils.movement_utils.find_path_between_zones": {
      "used_by": [
        "utils.movement_utils",
        "utils.movement_utils.move_actor_to_zone",
        "utils.movement_utils.get_zone_by_feature",
        "utils.movement_utils.resolve_target_to_zone",
        "utils.movement_utils.find_path_between_zones",
        "utils.movement_utils.distance_between_zones",
        "utils.movement_utils.move_actor_toward_target",
        "utils.movement_utils.start_movement_to_target",
        "utils.movement_utils.advance_actor_movement"
      ],
      "uses": [
        "utils.debug_utils.debug",
        "utils.movement_utils.find_path_between_zones",
        "utils.movement_utils.get_zone_by_feature",
        "utils.movement_utils.move_actor_to_zone",
        "utils.movement_utils.resolve_target_to_zone"
      ]
    },
    "utils.movement_utils.get_zone_by_feature": {
      "used_by": [
        "utils.movement_utils",
        "utils.movement_utils.move_actor_to_zone",
        "utils.movement_utils.get_zone_by_feature",
        "utils.movement_utils.resolve_target_to_zone",
        "utils.movement_utils.find_path_between_zones",
        "utils.movement_utils.distance_between_zones",
        "utils.movement_utils.move_actor_toward_target",
        "utils.movement_utils.start_movement_to_target",
        "utils.movement_utils.advance_actor_movement"
      ],
      "uses": [
        "utils.debug_utils.debug",
        "utils.movement_utils.find_path_between_zones",
        "utils.movement_utils.get_zone_by_feature",
        "utils.movement_utils.move_actor_to_zone",
        "utils.movement_utils.resolve_target_to_zone"
      ]
    },
    "utils.movement_utils.move_actor_to_zone": {
      "used_by": [
        "utils.movement_utils",
        "utils.movement_utils.move_actor_to_zone",
        "utils.movement_utils.get_zone_by_feature",
        "utils.movement_utils.resolve_target_to_zone",
        "utils.movement_utils.find_path_between_zones",
        "utils.movement_utils.distance_between_zones",
        "utils.movement_utils.move_actor_toward_target",
        "utils.movement_utils.start_movement_to_target",
        "utils.movement_utils.advance_actor_movement"
      ],
      "uses": [
        "utils.debug_utils.debug",
        "utils.movement_utils.find_path_between_zones",
        "utils.movement_utils.get_zone_by_feature",
        "utils.movement_utils.move_actor_to_zone",
        "utils.movement_utils.resolve_target_to_zone"
      ]
    },
    "utils.movement_utils.resolve_target_to_zone": {
      "used_by": [
        "utils.movement_utils",
        "utils.movement_utils.move_actor_to_zone",
        "utils.movement_utils.get_zone_by_feature",
        "utils.movement_utils.resolve_target_to_zone",
        "utils.movement_utils.find_path_between_zones",
        "utils.movement_utils.distance_between_zones",
        "utils.movement_utils.move_actor_toward_target",
        "utils.movement_utils.start_movement_to_target",
        "utils.movement_utils.advance_actor_movement"
      ],
      "uses": [
        "utils.debug_utils.debug",
        "utils.movement_utils.find_path_between_zones",
        "utils.movement_utils.get_zone_by_feature",
        "utils.movement_utils.move_actor_to_zone",
        "utils.movement_utils.resolve_target_to_zone"
      ]
    },
    "utils.movement_utils.distance_between_zones": {
      "used_by": [
        "utils.visibility_utils",
        "utils.visibility_utils.get_visibility_caps",
        "utils.visibility_utils.visual_coverage",
        "utils.visibility_utils.observe",
        "utils.visibility_utils.trace_visibility_path",
        "utils.visibility_utils.compute_visibility_penalty_along_path"
      ],
      "uses": [
        "utils.debug_utils.debug",
        "utils.movement_utils.find_path_between_zones",
        "utils.movement_utils.get_zone_by_feature",
        "utils.movement_utils.move_actor_to_zone",
        "utils.movement_utils.resolve_target_to_zone"
      ]
    },
    "utils.movement_utils.move_actor_toward_target": {
      "used_by": [],
      "uses": [
        "utils.debug_utils.debug",
        "utils.movement_utils.find_path_between_zones",
        "utils.movement_utils.get_zone_by_feature",
        "utils.movement_utils.move_actor_to_zone",
        "utils.movement_utils.resolve_target_to_zone"
      ]
    },
    "utils.movement_utils.start_movement_to_target": {
      "used_by": [],
      "uses": [
        "utils.debug_utils.debug",
        "utils.movement_utils.find_path_between_zones",
        "utils.movement_utils.get_zone_by_feature",
        "utils.movement_utils.move_actor_to_zone",
        "utils.movement_utils.resolve_target_to_zone"
      ]
    },
    "utils.movement_utils.advance_actor_movement": {
      "used_by": [],
      "uses": [
        "utils.debug_utils.debug",
        "utils.movement_utils.find_path_between_zones",
        "utils.movement_utils.get_zone_by_feature",
        "utils.movement_utils.move_actor_to_zone",
        "utils.movement_utils.resolve_target_to_zone"
      ]
    },
    "utils.skill_xp_utils": {
      "used_by": [],
      "uses": [
        "definitions.actor.initialize_skill_if_missing",
        "definitions.actor.initialize_technique_if_missing",
        "helpers.actor_helpers.initialize_skill_if_missing",
        "helpers.actor_helpers.initialize_technique_if_missing",
        "utils.skill_xp_utils._check_level_up",
        "utils.skill_xp_utils._tags_match"
      ]
    },
    "utils.skill_xp_utils._check_level_up": {
      "used_by": [
        "utils.skill_xp_utils",
        "utils.skill_xp_utils.track_xp_gain",
        "utils.skill_xp_utils._tags_match",
        "utils.skill_xp_utils._check_level_up"
      ],
      "uses": [
        "definitions.actor.initialize_skill_if_missing",
        "definitions.actor.initialize_technique_if_missing",
        "helpers.actor_helpers.initialize_skill_if_missing",
        "helpers.actor_helpers.initialize_technique_if_missing",
        "utils.skill_xp_utils._check_level_up",
        "utils.skill_xp_utils._tags_match"
      ]
    },
    "utils.skill_xp_utils._tags_match": {
      "used_by": [
        "utils.skill_xp_utils",
        "utils.skill_xp_utils.track_xp_gain",
        "utils.skill_xp_utils._tags_match",
        "utils.skill_xp_utils._check_level_up"
      ],
      "uses": [
        "definitions.actor.initialize_skill_if_missing",
        "definitions.actor.initialize_technique_if_missing",
        "helpers.actor_helpers.initialize_skill_if_missing",
        "helpers.actor_helpers.initialize_technique_if_missing",
        "utils.skill_xp_utils._check_level_up",
        "utils.skill_xp_utils._tags_match"
      ]
    },
    "utils.technique_unlock_utils": {
      "used_by": [],
      "uses": [
        "definitions.actor.add_technique"
      ]
    },
    "utils.technique_utils": {
      "used_by": [],
      "uses": [
        "utils.technique_utils.evolve_add_effect",
        "utils.technique_utils.evolve_add_modifier",
        "utils.technique_utils.evolve_replace_effect"
      ]
    },
    "utils.technique_utils.evolve_add_effect": {
      "used_by": [
        "utils.technique_utils",
        "utils.technique_utils.generate_technique",
        "utils.technique_utils.evolve_replace_effect",
        "utils.technique_utils.evolve_add_modifier",
        "utils.technique_utils.evolve_add_effect",
        "utils.technique_utils.evolve_technique",
        "utils.technique_utils.get_available_mutations"
      ],
      "uses": [
        "utils.technique_utils.evolve_add_effect",
        "utils.technique_utils.evolve_add_modifier",
        "utils.technique_utils.evolve_replace_effect"
      ]
    },
    "utils.technique_utils.evolve_add_modifier": {
      "used_by": [
        "utils.technique_utils",
        "utils.technique_utils.generate_technique",
        "utils.technique_utils.evolve_replace_effect",
        "utils.technique_utils.evolve_add_modifier",
        "utils.technique_utils.evolve_add_effect",
        "utils.technique_utils.evolve_technique",
        "utils.technique_utils.get_available_mutations"
      ],
      "uses": [
        "utils.technique_utils.evolve_add_effect",
        "utils.technique_utils.evolve_add_modifier",
        "utils.technique_utils.evolve_replace_effect"
      ]
    },
    "utils.technique_utils.evolve_replace_effect": {
      "used_by": [
        "utils.technique_utils",
        "utils.technique_utils.generate_technique",
        "utils.technique_utils.evolve_replace_effect",
        "utils.technique_utils.evolve_add_modifier",
        "utils.technique_utils.evolve_add_effect",
        "utils.technique_utils.evolve_technique",
        "utils.technique_utils.get_available_mutations"
      ],
      "uses": [
        "utils.technique_utils.evolve_add_effect",
        "utils.technique_utils.evolve_add_modifier",
        "utils.technique_utils.evolve_replace_effect"
      ]
    },
    "utils.technique_utils.get_available_mutations": {
      "used_by": [],
      "uses": [
        "utils.technique_utils.evolve_add_effect",
        "utils.technique_utils.evolve_add_modifier",
        "utils.technique_utils.evolve_replace_effect"
      ]
    },
    "utils.test_trace_line": {
      "used_by": [],
      "uses": [
        "utils.general_utils.trace_line",
        "utils.test_trace_line.make_blank_tile"
      ]
    },
    "utils.test_trace_line.make_blank_tile": {
      "used_by": [
        "utils.test_trace_line",
        "utils.test_trace_line.make_blank_tile",
        "utils.test_trace_line.test_straight_line_unblocked",
        "utils.test_trace_line.test_diagonal_line_with_blocking_tile",
        "utils.test_trace_line.test_tile_with_blocking_thing",
        "utils.test_trace_line.test_missing_tile_skipped"
      ],
      "uses": [
        "utils.general_utils.trace_line",
        "utils.test_trace_line.make_blank_tile"
      ]
    },
    "utils.test_trace_line.test_straight_line_unblocked": {
      "used_by": [],
      "uses": [
        "utils.general_utils.trace_line",
        "utils.test_trace_line.make_blank_tile"
      ]
    },
    "utils.test_trace_line.test_diagonal_line_with_blocking_tile": {
      "used_by": [],
      "uses": [
        "utils.general_utils.trace_line",
        "utils.test_trace_line.make_blank_tile"
      ]
    },
    "utils.test_trace_line.test_tile_with_blocking_thing": {
      "used_by": [],
      "uses": [
        "utils.general_utils.trace_line",
        "utils.test_trace_line.make_blank_tile"
      ]
    },
    "utils.test_trace_line.test_missing_tile_skipped": {
      "used_by": [],
      "uses": [
        "utils.general_utils.trace_line",
        "utils.test_trace_line.make_blank_tile"
      ]
    },
    "utils.test_visibility_penalty": {
      "used_by": [],
      "uses": [
        "test_visibility_penalty.make_tile_with_env",
        "utils.general_utils.compute_visibility_penalty_along_path",
        "utils.general_utils.trace_line",
        "utils.test_visibility_penalty.make_tile_with_env",
        "utils.visibility_utils.compute_visibility_penalty_along_path"
      ]
    },
    "test_visibility_penalty.make_tile_with_env": {
      "used_by": [
        "utils.test_visibility_penalty",
        "utils.test_visibility_penalty.make_tile_with_env",
        "utils.test_visibility_penalty.test_no_environment_penalty",
        "utils.test_visibility_penalty.test_single_fog_tile",
        "utils.test_visibility_penalty.test_multiple_penalty_sources",
        "utils.test_visibility_penalty.test_missing_env_field",
        "utils.test_visibility_penalty.test_empty_path",
        "utils.test_visibility_penalty.test_invalid_path_type",
        "utils.test_visibility_penalty.test_step_not_dict",
        "utils.test_visibility_penalty.test_missing_tile_dict",
        "utils.test_visibility_penalty.test_env_not_list"
      ],
      "uses": []
    },
    "utils.test_visibility_penalty.make_tile_with_env": {
      "used_by": [
        "utils.test_visibility_penalty",
        "utils.test_visibility_penalty.make_tile_with_env",
        "utils.test_visibility_penalty.test_no_environment_penalty",
        "utils.test_visibility_penalty.test_single_fog_tile",
        "utils.test_visibility_penalty.test_multiple_penalty_sources",
        "utils.test_visibility_penalty.test_missing_env_field",
        "utils.test_visibility_penalty.test_empty_path",
        "utils.test_visibility_penalty.test_invalid_path_type",
        "utils.test_visibility_penalty.test_step_not_dict",
        "utils.test_visibility_penalty.test_missing_tile_dict",
        "utils.test_visibility_penalty.test_env_not_list"
      ],
      "uses": [
        "test_visibility_penalty.make_tile_with_env",
        "utils.general_utils.compute_visibility_penalty_along_path",
        "utils.general_utils.trace_line",
        "utils.test_visibility_penalty.make_tile_with_env",
        "utils.visibility_utils.compute_visibility_penalty_along_path"
      ]
    },
    "utils.visibility_utils.compute_visibility_penalty_along_path": {
      "used_by": [
        "utils.test_visibility_penalty",
        "utils.test_visibility_penalty.make_tile_with_env",
        "utils.test_visibility_penalty.test_no_environment_penalty",
        "utils.test_visibility_penalty.test_single_fog_tile",
        "utils.test_visibility_penalty.test_multiple_penalty_sources",
        "utils.test_visibility_penalty.test_missing_env_field",
        "utils.test_visibility_penalty.test_empty_path",
        "utils.test_visibility_penalty.test_invalid_path_type",
        "utils.test_visibility_penalty.test_step_not_dict",
        "utils.test_visibility_penalty.test_missing_tile_dict",
        "utils.test_visibility_penalty.test_env_not_list"
      ],
      "uses": [
        "utils.debug_utils.debug",
        "utils.movement_utils.distance_between_zones",
        "utils.visibility_utils.get_visibility_caps",
        "utils.visibility_utils.trace_visibility_path",
        "utils.visibility_utils.visual_coverage"
      ]
    },
    "utils.test_visibility_penalty.test_no_environment_penalty": {
      "used_by": [],
      "uses": [
        "test_visibility_penalty.make_tile_with_env",
        "utils.general_utils.compute_visibility_penalty_along_path",
        "utils.general_utils.trace_line",
        "utils.test_visibility_penalty.make_tile_with_env",
        "utils.visibility_utils.compute_visibility_penalty_along_path"
      ]
    },
    "utils.test_visibility_penalty.test_single_fog_tile": {
      "used_by": [],
      "uses": [
        "test_visibility_penalty.make_tile_with_env",
        "utils.general_utils.compute_visibility_penalty_along_path",
        "utils.general_utils.trace_line",
        "utils.test_visibility_penalty.make_tile_with_env",
        "utils.visibility_utils.compute_visibility_penalty_along_path"
      ]
    },
    "utils.test_visibility_penalty.test_multiple_penalty_sources": {
      "used_by": [],
      "uses": [
        "test_visibility_penalty.make_tile_with_env",
        "utils.general_utils.compute_visibility_penalty_along_path",
        "utils.general_utils.trace_line",
        "utils.test_visibility_penalty.make_tile_with_env",
        "utils.visibility_utils.compute_visibility_penalty_along_path"
      ]
    },
    "utils.test_visibility_penalty.test_missing_env_field": {
      "used_by": [],
      "uses": [
        "test_visibility_penalty.make_tile_with_env",
        "utils.general_utils.compute_visibility_penalty_along_path",
        "utils.general_utils.trace_line",
        "utils.test_visibility_penalty.make_tile_with_env",
        "utils.visibility_utils.compute_visibility_penalty_along_path"
      ]
    },
    "utils.test_visibility_penalty.test_empty_path": {
      "used_by": [],
      "uses": [
        "test_visibility_penalty.make_tile_with_env",
        "utils.general_utils.compute_visibility_penalty_along_path",
        "utils.general_utils.trace_line",
        "utils.test_visibility_penalty.make_tile_with_env",
        "utils.visibility_utils.compute_visibility_penalty_along_path"
      ]
    },
    "utils.test_visibility_penalty.test_invalid_path_type": {
      "used_by": [],
      "uses": [
        "test_visibility_penalty.make_tile_with_env",
        "utils.general_utils.compute_visibility_penalty_along_path",
        "utils.general_utils.trace_line",
        "utils.test_visibility_penalty.make_tile_with_env",
        "utils.visibility_utils.compute_visibility_penalty_along_path"
      ]
    },
    "utils.test_visibility_penalty.test_step_not_dict": {
      "used_by": [],
      "uses": [
        "test_visibility_penalty.make_tile_with_env",
        "utils.general_utils.compute_visibility_penalty_along_path",
        "utils.general_utils.trace_line",
        "utils.test_visibility_penalty.make_tile_with_env",
        "utils.visibility_utils.compute_visibility_penalty_along_path"
      ]
    },
    "utils.test_visibility_penalty.test_missing_tile_dict": {
      "used_by": [],
      "uses": [
        "test_visibility_penalty.make_tile_with_env",
        "utils.general_utils.compute_visibility_penalty_along_path",
        "utils.general_utils.trace_line",
        "utils.test_visibility_penalty.make_tile_with_env",
        "utils.visibility_utils.compute_visibility_penalty_along_path"
      ]
    },
    "utils.test_visibility_penalty.test_env_not_list": {
      "used_by": [],
      "uses": [
        "test_visibility_penalty.make_tile_with_env",
        "utils.general_utils.compute_visibility_penalty_along_path",
        "utils.general_utils.trace_line",
        "utils.test_visibility_penalty.make_tile_with_env",
        "utils.visibility_utils.compute_visibility_penalty_along_path"
      ]
    },
    "utils.visibility_utils": {
      "used_by": [],
      "uses": [
        "utils.debug_utils.debug",
        "utils.movement_utils.distance_between_zones",
        "utils.visibility_utils.get_visibility_caps",
        "utils.visibility_utils.trace_visibility_path",
        "utils.visibility_utils.visual_coverage"
      ]
    },
    "utils.visibility_utils.get_visibility_caps": {
      "used_by": [
        "utils.visibility_utils",
        "utils.visibility_utils.get_visibility_caps",
        "utils.visibility_utils.visual_coverage",
        "utils.visibility_utils.observe",
        "utils.visibility_utils.trace_visibility_path",
        "utils.visibility_utils.compute_visibility_penalty_along_path"
      ],
      "uses": [
        "utils.debug_utils.debug",
        "utils.movement_utils.distance_between_zones",
        "utils.visibility_utils.get_visibility_caps",
        "utils.visibility_utils.trace_visibility_path",
        "utils.visibility_utils.visual_coverage"
      ]
    },
    "utils.visibility_utils.trace_visibility_path": {
      "used_by": [
        "utils.visibility_utils",
        "utils.visibility_utils.get_visibility_caps",
        "utils.visibility_utils.visual_coverage",
        "utils.visibility_utils.observe",
        "utils.visibility_utils.trace_visibility_path",
        "utils.visibility_utils.compute_visibility_penalty_along_path"
      ],
      "uses": [
        "utils.debug_utils.debug",
        "utils.movement_utils.distance_between_zones",
        "utils.visibility_utils.get_visibility_caps",
        "utils.visibility_utils.trace_visibility_path",
        "utils.visibility_utils.visual_coverage"
      ]
    },
    "utils.visibility_utils.visual_coverage": {
      "used_by": [
        "utils.visibility_utils",
        "utils.visibility_utils.get_visibility_caps",
        "utils.visibility_utils.visual_coverage",
        "utils.visibility_utils.observe",
        "utils.visibility_utils.trace_visibility_path",
        "utils.visibility_utils.compute_visibility_penalty_along_path"
      ],
      "uses": [
        "utils.debug_utils.debug",
        "utils.movement_utils.distance_between_zones",
        "utils.visibility_utils.get_visibility_caps",
        "utils.visibility_utils.trace_visibility_path",
        "utils.visibility_utils.visual_coverage"
      ]
    },
    "utils.visibility_utils.observe": {
      "used_by": [],
      "uses": [
        "utils.debug_utils.debug",
        "utils.movement_utils.distance_between_zones",
        "utils.visibility_utils.get_visibility_caps",
        "utils.visibility_utils.trace_visibility_path",
        "utils.visibility_utils.visual_coverage"
      ]
    },
    "world.discovery": {
      "used_by": [],
      "uses": [
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_features",
        "world.discovery.sample_moisture",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_features",
        "world.generation.sample_moisture"
      ]
    },
    "world.discovery.sample_biome": {
      "used_by": [
        "world.discovery",
        "world.discovery.TileGenerator",
        "world.discovery.__init__",
        "world.discovery.generate_tile",
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_moisture",
        "world.discovery.sample_features",
        "world.generation",
        "world.generation.TileGenerator",
        "world.generation.__init__",
        "world.generation.generate_tile",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_moisture",
        "world.generation.sample_features"
      ],
      "uses": [
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_features",
        "world.discovery.sample_moisture",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_features",
        "world.generation.sample_moisture"
      ]
    },
    "world.discovery.sample_elevation": {
      "used_by": [
        "world.discovery",
        "world.discovery.TileGenerator",
        "world.discovery.__init__",
        "world.discovery.generate_tile",
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_moisture",
        "world.discovery.sample_features",
        "world.generation",
        "world.generation.TileGenerator",
        "world.generation.__init__",
        "world.generation.generate_tile",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_moisture",
        "world.generation.sample_features"
      ],
      "uses": [
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_features",
        "world.discovery.sample_moisture",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_features",
        "world.generation.sample_moisture"
      ]
    },
    "world.discovery.sample_features": {
      "used_by": [
        "world.discovery",
        "world.discovery.TileGenerator",
        "world.discovery.__init__",
        "world.discovery.generate_tile",
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_moisture",
        "world.discovery.sample_features",
        "world.generation",
        "world.generation.TileGenerator",
        "world.generation.__init__",
        "world.generation.generate_tile",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_moisture",
        "world.generation.sample_features"
      ],
      "uses": [
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_features",
        "world.discovery.sample_moisture",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_features",
        "world.generation.sample_moisture"
      ]
    },
    "world.discovery.sample_moisture": {
      "used_by": [
        "world.discovery",
        "world.discovery.TileGenerator",
        "world.discovery.__init__",
        "world.discovery.generate_tile",
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_moisture",
        "world.discovery.sample_features",
        "world.generation",
        "world.generation.TileGenerator",
        "world.generation.__init__",
        "world.generation.generate_tile",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_moisture",
        "world.generation.sample_features"
      ],
      "uses": [
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_features",
        "world.discovery.sample_moisture",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_features",
        "world.generation.sample_moisture"
      ]
    },
    "world.generation.sample_biome": {
      "used_by": [
        "world.discovery",
        "world.discovery.TileGenerator",
        "world.discovery.__init__",
        "world.discovery.generate_tile",
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_moisture",
        "world.discovery.sample_features",
        "world.generation",
        "world.generation.TileGenerator",
        "world.generation.__init__",
        "world.generation.generate_tile",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_moisture",
        "world.generation.sample_features"
      ],
      "uses": [
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_features",
        "world.discovery.sample_moisture",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_features",
        "world.generation.sample_moisture"
      ]
    },
    "world.generation.sample_elevation": {
      "used_by": [
        "world.discovery",
        "world.discovery.TileGenerator",
        "world.discovery.__init__",
        "world.discovery.generate_tile",
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_moisture",
        "world.discovery.sample_features",
        "world.generation",
        "world.generation.TileGenerator",
        "world.generation.__init__",
        "world.generation.generate_tile",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_moisture",
        "world.generation.sample_features"
      ],
      "uses": [
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_features",
        "world.discovery.sample_moisture",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_features",
        "world.generation.sample_moisture"
      ]
    },
    "world.generation.sample_features": {
      "used_by": [
        "world.discovery",
        "world.discovery.TileGenerator",
        "world.discovery.__init__",
        "world.discovery.generate_tile",
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_moisture",
        "world.discovery.sample_features",
        "world.generation",
        "world.generation.TileGenerator",
        "world.generation.__init__",
        "world.generation.generate_tile",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_moisture",
        "world.generation.sample_features"
      ],
      "uses": [
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_features",
        "world.discovery.sample_moisture",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_features",
        "world.generation.sample_moisture"
      ]
    },
    "world.generation.sample_moisture": {
      "used_by": [
        "world.discovery",
        "world.discovery.TileGenerator",
        "world.discovery.__init__",
        "world.discovery.generate_tile",
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_moisture",
        "world.discovery.sample_features",
        "world.generation",
        "world.generation.TileGenerator",
        "world.generation.__init__",
        "world.generation.generate_tile",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_moisture",
        "world.generation.sample_features"
      ],
      "uses": [
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_features",
        "world.discovery.sample_moisture",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_features",
        "world.generation.sample_moisture"
      ]
    },
    "world.discovery.TileGenerator": {
      "used_by": [],
      "uses": [
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_features",
        "world.discovery.sample_moisture",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_features",
        "world.generation.sample_moisture"
      ]
    },
    "world.discovery.__init__": {
      "used_by": [],
      "uses": [
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_features",
        "world.discovery.sample_moisture",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_features",
        "world.generation.sample_moisture"
      ]
    },
    "world.discovery.generate_tile": {
      "used_by": [],
      "uses": [
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_features",
        "world.discovery.sample_moisture",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_features",
        "world.generation.sample_moisture"
      ]
    },
    "world.generation": {
      "used_by": [],
      "uses": [
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_features",
        "world.discovery.sample_moisture",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_features",
        "world.generation.sample_moisture"
      ]
    },
    "world.generation.TileGenerator": {
      "used_by": [],
      "uses": [
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_features",
        "world.discovery.sample_moisture",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_features",
        "world.generation.sample_moisture"
      ]
    },
    "world.generation.__init__": {
      "used_by": [],
      "uses": [
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_features",
        "world.discovery.sample_moisture",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_features",
        "world.generation.sample_moisture"
      ]
    },
    "world.generation.generate_tile": {
      "used_by": [],
      "uses": [
        "world.discovery.sample_biome",
        "world.discovery.sample_elevation",
        "world.discovery.sample_features",
        "world.discovery.sample_moisture",
        "world.generation.sample_biome",
        "world.generation.sample_elevation",
        "world.generation.sample_features",
        "world.generation.sample_moisture"
      ]
    },
    "world.hex": {
      "used_by": [],
      "uses": [
        "world.hex.generate_seed"
      ]
    },
    "world.hex.generate_seed": {
      "used_by": [
        "world.hex",
        "world.hex.HexTile",
        "world.hex.__init__",
        "world.hex.generate_seed",
        "world.hex.coord"
      ],
      "uses": [
        "world.hex.generate_seed"
      ]
    },
    "world.hex.HexTile": {
      "used_by": [],
      "uses": [
        "world.hex.generate_seed"
      ]
    },
    "world.hex.__init__": {
      "used_by": [],
      "uses": [
        "world.hex.generate_seed"
      ]
    },
    "world.hex.coord": {
      "used_by": [],
      "uses": [
        "world.hex.generate_seed"
      ]
    }
  }
}