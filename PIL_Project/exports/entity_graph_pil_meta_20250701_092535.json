{
  "timestamp": "20250701_092535",
  "project_name": "pil_meta",
  "graph": {
    "pipeline": {
      "fqname": "pipeline",
      "type": "module",
      "description": "Orchestrates the full PIL metadata pipeline with structured reporting.",
      "tags": [
        "pipeline",
        "orchestration",
        "reporting"
      ],
      "source_file": "pipeline.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "pipeline",
        "module": "pipeline",
        "name": "pipeline",
        "type": "module",
        "lineno": 1,
        "source_file": "pipeline.py",
        "description": "Orchestrates the full PIL metadata pipeline with structured reporting.",
        "docstring_full": "Orchestrates the full PIL metadata pipeline with structured reporting.\nFocuses on core exports and clean governance summary.\n\n@tags: [\"pipeline\", \"orchestration\", \"reporting\"]\n@status: \"stable\"",
        "tags": [
          "pipeline",
          "orchestration",
          "reporting"
        ],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": "stable",
        "visibility": null,
        "docstring_present": true,
        "metadata": {}
      },
      "links": [
        {
          "target": "utils.messaging_utils.print_run_context",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_folder_tree_summary",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_asset_scan_summary",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_symbol_extraction",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_entity_graph",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_exports",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_governance_summary",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_journal_entries_loaded",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_pipeline_complete",
          "type": "calls"
        },
        {
          "target": "pipeline.PipelineResult",
          "type": "calls"
        },
        {
          "target": "pipeline.run_pipeline",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.set_debug",
          "type": "calls"
        },
        {
          "target": "loaders.config_loader.load_config",
          "type": "calls"
        },
        {
          "target": "loaders.asset_loader.load_asset_symbols",
          "type": "calls"
        },
        {
          "target": "builders.entity_graph_builder.build_entity_graph",
          "type": "calls"
        },
        {
          "target": "builders.linkage_builder.inject_call_links",
          "type": "calls"
        },
        {
          "target": "utils.export_cleanup_utils.clean_exports_dir",
          "type": "calls"
        },
        {
          "target": "exporters.json_exporter.export_entity_graph",
          "type": "calls"
        },
        {
          "target": "exporters.usage_map_exporter.export_usage_map",
          "type": "calls"
        },
        {
          "target": "exporters.markdown_vault_exporter.export_markdown_vault",
          "type": "calls"
        },
        {
          "target": "exporters.vault_index_exporter.export_vault_index",
          "type": "calls"
        },
        {
          "target": "loaders.markdown_loader.load_markdown_entries",
          "type": "calls"
        },
        {
          "target": "pipeline.print_full_report",
          "type": "calls"
        },
        {
          "target": "builders.usage_map_builder.build_usage_map",
          "type": "calls"
        },
        {
          "target": "utils.snapshot_utils.take_project_snapshot",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.load_code_symbols",
          "type": "calls"
        }
      ],
      "called_by_fqns": [],
      "calls_fqns": [
        "builders.entity_graph_builder.build_entity_graph",
        "builders.linkage_builder.inject_call_links",
        "builders.usage_map_builder.build_usage_map",
        "exporters.json_exporter.export_entity_graph",
        "exporters.markdown_vault_exporter.export_markdown_vault",
        "exporters.usage_map_exporter.export_usage_map",
        "exporters.vault_index_exporter.export_vault_index",
        "loaders.asset_loader.load_asset_symbols",
        "loaders.code_loader.load_code_symbols",
        "loaders.config_loader.load_config",
        "loaders.markdown_loader.load_markdown_entries",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "utils.export_cleanup_utils.clean_exports_dir",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.set_debug",
        "utils.snapshot_utils.take_project_snapshot"
      ]
    },
    "pipeline.PipelineResult": {
      "fqname": "pipeline.PipelineResult",
      "type": "class",
      "description": "Container for all results and statistics from a full PIL pipeline run.",
      "tags": [],
      "source_file": "pipeline.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "pipeline.PipelineResult",
        "module": "pipeline",
        "name": "PipelineResult",
        "type": "class",
        "lineno": 50,
        "source_file": "pipeline.py",
        "description": "Container for all results and statistics from a full PIL pipeline run.",
        "docstring_full": "Container for all results and statistics from a full PIL pipeline run.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {}
      },
      "links": [
        {
          "target": "utils.messaging_utils.print_run_context",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_folder_tree_summary",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_asset_scan_summary",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_symbol_extraction",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_entity_graph",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_exports",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_governance_summary",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_journal_entries_loaded",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_pipeline_complete",
          "type": "calls"
        },
        {
          "target": "pipeline.PipelineResult",
          "type": "calls"
        },
        {
          "target": "pipeline.run_pipeline",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.set_debug",
          "type": "calls"
        },
        {
          "target": "loaders.config_loader.load_config",
          "type": "calls"
        },
        {
          "target": "loaders.asset_loader.load_asset_symbols",
          "type": "calls"
        },
        {
          "target": "builders.entity_graph_builder.build_entity_graph",
          "type": "calls"
        },
        {
          "target": "builders.linkage_builder.inject_call_links",
          "type": "calls"
        },
        {
          "target": "utils.export_cleanup_utils.clean_exports_dir",
          "type": "calls"
        },
        {
          "target": "exporters.json_exporter.export_entity_graph",
          "type": "calls"
        },
        {
          "target": "exporters.usage_map_exporter.export_usage_map",
          "type": "calls"
        },
        {
          "target": "exporters.markdown_vault_exporter.export_markdown_vault",
          "type": "calls"
        },
        {
          "target": "exporters.vault_index_exporter.export_vault_index",
          "type": "calls"
        },
        {
          "target": "loaders.markdown_loader.load_markdown_entries",
          "type": "calls"
        },
        {
          "target": "pipeline.print_full_report",
          "type": "calls"
        },
        {
          "target": "builders.usage_map_builder.build_usage_map",
          "type": "calls"
        },
        {
          "target": "utils.snapshot_utils.take_project_snapshot",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.load_code_symbols",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": [
        "builders.entity_graph_builder.build_entity_graph",
        "builders.linkage_builder.inject_call_links",
        "builders.usage_map_builder.build_usage_map",
        "exporters.json_exporter.export_entity_graph",
        "exporters.markdown_vault_exporter.export_markdown_vault",
        "exporters.usage_map_exporter.export_usage_map",
        "exporters.vault_index_exporter.export_vault_index",
        "loaders.asset_loader.load_asset_symbols",
        "loaders.code_loader.load_code_symbols",
        "loaders.config_loader.load_config",
        "loaders.markdown_loader.load_markdown_entries",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "utils.export_cleanup_utils.clean_exports_dir",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.set_debug",
        "utils.snapshot_utils.take_project_snapshot"
      ]
    },
    "pipeline.print_full_report": {
      "fqname": "pipeline.print_full_report",
      "type": "function",
      "description": "Prints the entire structured pipeline report in one call.",
      "tags": [],
      "source_file": "pipeline.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "pipeline.print_full_report",
        "module": "pipeline",
        "name": "print_full_report",
        "type": "function",
        "lineno": 105,
        "source_file": "pipeline.py",
        "description": "Prints the entire structured pipeline report in one call.",
        "docstring_full": "Prints the entire structured pipeline report in one call.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "result"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "utils.messaging_utils.print_run_context",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_folder_tree_summary",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_asset_scan_summary",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_symbol_extraction",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_entity_graph",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_exports",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_governance_summary",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_journal_entries_loaded",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_pipeline_complete",
          "type": "calls"
        },
        {
          "target": "pipeline.PipelineResult",
          "type": "calls"
        },
        {
          "target": "pipeline.run_pipeline",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.set_debug",
          "type": "calls"
        },
        {
          "target": "loaders.config_loader.load_config",
          "type": "calls"
        },
        {
          "target": "loaders.asset_loader.load_asset_symbols",
          "type": "calls"
        },
        {
          "target": "builders.entity_graph_builder.build_entity_graph",
          "type": "calls"
        },
        {
          "target": "builders.linkage_builder.inject_call_links",
          "type": "calls"
        },
        {
          "target": "utils.export_cleanup_utils.clean_exports_dir",
          "type": "calls"
        },
        {
          "target": "exporters.json_exporter.export_entity_graph",
          "type": "calls"
        },
        {
          "target": "exporters.usage_map_exporter.export_usage_map",
          "type": "calls"
        },
        {
          "target": "exporters.markdown_vault_exporter.export_markdown_vault",
          "type": "calls"
        },
        {
          "target": "exporters.vault_index_exporter.export_vault_index",
          "type": "calls"
        },
        {
          "target": "loaders.markdown_loader.load_markdown_entries",
          "type": "calls"
        },
        {
          "target": "pipeline.print_full_report",
          "type": "calls"
        },
        {
          "target": "builders.usage_map_builder.build_usage_map",
          "type": "calls"
        },
        {
          "target": "utils.snapshot_utils.take_project_snapshot",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.load_code_symbols",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": [
        "builders.entity_graph_builder.build_entity_graph",
        "builders.linkage_builder.inject_call_links",
        "builders.usage_map_builder.build_usage_map",
        "exporters.json_exporter.export_entity_graph",
        "exporters.markdown_vault_exporter.export_markdown_vault",
        "exporters.usage_map_exporter.export_usage_map",
        "exporters.vault_index_exporter.export_vault_index",
        "loaders.asset_loader.load_asset_symbols",
        "loaders.code_loader.load_code_symbols",
        "loaders.config_loader.load_config",
        "loaders.markdown_loader.load_markdown_entries",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "utils.export_cleanup_utils.clean_exports_dir",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.set_debug",
        "utils.snapshot_utils.take_project_snapshot"
      ]
    },
    "pipeline.run_pipeline": {
      "fqname": "pipeline.run_pipeline",
      "type": "function",
      "description": "Orchestrates the PIL metadata pipeline (scan + process + reporting).",
      "tags": [],
      "source_file": "pipeline.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "pipeline.run_pipeline",
        "module": "pipeline",
        "name": "run_pipeline",
        "type": "function",
        "lineno": 147,
        "source_file": "pipeline.py",
        "description": "Orchestrates the PIL metadata pipeline (scan + process + reporting).",
        "docstring_full": "Orchestrates the PIL metadata pipeline (scan + process + reporting).",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "config_path"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "utils.messaging_utils.print_run_context",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_folder_tree_summary",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_asset_scan_summary",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_symbol_extraction",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_entity_graph",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_exports",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_governance_summary",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_journal_entries_loaded",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_pipeline_complete",
          "type": "calls"
        },
        {
          "target": "pipeline.PipelineResult",
          "type": "calls"
        },
        {
          "target": "pipeline.run_pipeline",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.set_debug",
          "type": "calls"
        },
        {
          "target": "loaders.config_loader.load_config",
          "type": "calls"
        },
        {
          "target": "loaders.asset_loader.load_asset_symbols",
          "type": "calls"
        },
        {
          "target": "builders.entity_graph_builder.build_entity_graph",
          "type": "calls"
        },
        {
          "target": "builders.linkage_builder.inject_call_links",
          "type": "calls"
        },
        {
          "target": "utils.export_cleanup_utils.clean_exports_dir",
          "type": "calls"
        },
        {
          "target": "exporters.json_exporter.export_entity_graph",
          "type": "calls"
        },
        {
          "target": "exporters.usage_map_exporter.export_usage_map",
          "type": "calls"
        },
        {
          "target": "exporters.markdown_vault_exporter.export_markdown_vault",
          "type": "calls"
        },
        {
          "target": "exporters.vault_index_exporter.export_vault_index",
          "type": "calls"
        },
        {
          "target": "loaders.markdown_loader.load_markdown_entries",
          "type": "calls"
        },
        {
          "target": "pipeline.print_full_report",
          "type": "calls"
        },
        {
          "target": "builders.usage_map_builder.build_usage_map",
          "type": "calls"
        },
        {
          "target": "utils.snapshot_utils.take_project_snapshot",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.load_code_symbols",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": [
        "builders.entity_graph_builder.build_entity_graph",
        "builders.linkage_builder.inject_call_links",
        "builders.usage_map_builder.build_usage_map",
        "exporters.json_exporter.export_entity_graph",
        "exporters.markdown_vault_exporter.export_markdown_vault",
        "exporters.usage_map_exporter.export_usage_map",
        "exporters.vault_index_exporter.export_vault_index",
        "loaders.asset_loader.load_asset_symbols",
        "loaders.code_loader.load_code_symbols",
        "loaders.config_loader.load_config",
        "loaders.markdown_loader.load_markdown_entries",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "utils.export_cleanup_utils.clean_exports_dir",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.set_debug",
        "utils.snapshot_utils.take_project_snapshot"
      ]
    },
    "pipeline.__init__": {
      "fqname": "pipeline.__init__",
      "type": "method",
      "description": "",
      "tags": [],
      "source_file": "pipeline.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "pipeline.__init__",
        "module": "pipeline",
        "name": "__init__",
        "type": "method",
        "lineno": 78,
        "source_file": "pipeline.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [
            "self"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "utils.messaging_utils.print_run_context",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_folder_tree_summary",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_asset_scan_summary",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_symbol_extraction",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_entity_graph",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_exports",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_governance_summary",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_journal_entries_loaded",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.print_pipeline_complete",
          "type": "calls"
        },
        {
          "target": "pipeline.PipelineResult",
          "type": "calls"
        },
        {
          "target": "pipeline.run_pipeline",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.set_debug",
          "type": "calls"
        },
        {
          "target": "loaders.config_loader.load_config",
          "type": "calls"
        },
        {
          "target": "loaders.asset_loader.load_asset_symbols",
          "type": "calls"
        },
        {
          "target": "builders.entity_graph_builder.build_entity_graph",
          "type": "calls"
        },
        {
          "target": "builders.linkage_builder.inject_call_links",
          "type": "calls"
        },
        {
          "target": "utils.export_cleanup_utils.clean_exports_dir",
          "type": "calls"
        },
        {
          "target": "exporters.json_exporter.export_entity_graph",
          "type": "calls"
        },
        {
          "target": "exporters.usage_map_exporter.export_usage_map",
          "type": "calls"
        },
        {
          "target": "exporters.markdown_vault_exporter.export_markdown_vault",
          "type": "calls"
        },
        {
          "target": "exporters.vault_index_exporter.export_vault_index",
          "type": "calls"
        },
        {
          "target": "loaders.markdown_loader.load_markdown_entries",
          "type": "calls"
        },
        {
          "target": "pipeline.print_full_report",
          "type": "calls"
        },
        {
          "target": "builders.usage_map_builder.build_usage_map",
          "type": "calls"
        },
        {
          "target": "utils.snapshot_utils.take_project_snapshot",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.load_code_symbols",
          "type": "calls"
        }
      ],
      "called_by_fqns": [],
      "calls_fqns": [
        "builders.entity_graph_builder.build_entity_graph",
        "builders.linkage_builder.inject_call_links",
        "builders.usage_map_builder.build_usage_map",
        "exporters.json_exporter.export_entity_graph",
        "exporters.markdown_vault_exporter.export_markdown_vault",
        "exporters.usage_map_exporter.export_usage_map",
        "exporters.vault_index_exporter.export_vault_index",
        "loaders.asset_loader.load_asset_symbols",
        "loaders.code_loader.load_code_symbols",
        "loaders.config_loader.load_config",
        "loaders.markdown_loader.load_markdown_entries",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "utils.export_cleanup_utils.clean_exports_dir",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.set_debug",
        "utils.snapshot_utils.take_project_snapshot"
      ]
    },
    "builders.entity_graph_builder": {
      "fqname": "builders.entity_graph_builder",
      "type": "module",
      "description": "Wraps pre-enriched code entities into graph nodes for the entity graph.",
      "tags": [],
      "source_file": "builders\\entity_graph_builder.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "builders.entity_graph_builder",
        "module": "builders.entity_graph_builder",
        "name": "builders.entity_graph_builder",
        "type": "module",
        "lineno": 1,
        "source_file": "builders\\entity_graph_builder.py",
        "description": "Wraps pre-enriched code entities into graph nodes for the entity graph.",
        "docstring_full": "Wraps pre-enriched code entities into graph nodes for the entity graph.\n\nAssumes upstream loader (code_loader) has already attached all required metadata,\nincluding tags, docstring status, and test coverage placeholders.\n\nOutput format conforms to the `entity_graph.json` specification.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "builders.entity_graph_builder.build_entity_graph": {
      "fqname": "builders.entity_graph_builder.build_entity_graph",
      "type": "function",
      "description": "Wrap each enriched entity into a compliant graph node.",
      "tags": [],
      "source_file": "builders\\entity_graph_builder.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "builders.entity_graph_builder.build_entity_graph",
        "module": "builders.entity_graph_builder",
        "name": "build_entity_graph",
        "type": "function",
        "lineno": 11,
        "source_file": "builders\\entity_graph_builder.py",
        "description": "Wrap each enriched entity into a compliant graph node.",
        "docstring_full": "Wrap each enriched entity into a compliant graph node.\n\nParameters:\n    entities (list[dict]): Raw or enriched entity records.\n\nReturns:\n    dict: fqname → wrapped graph node",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "entities"
          ],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": []
    },
    "builders.linkage_builder": {
      "fqname": "builders.linkage_builder",
      "type": "module",
      "description": "Adds call relationships between entities in the graph.",
      "tags": [],
      "source_file": "builders\\linkage_builder.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "builders.linkage_builder",
        "module": "builders.linkage_builder",
        "name": "builders.linkage_builder",
        "type": "module",
        "lineno": 1,
        "source_file": "builders\\linkage_builder.py",
        "description": "Adds call relationships between entities in the graph.",
        "docstring_full": "Adds call relationships between entities in the graph.\n\nUses AST parsing to detect structural function calls, updates each node with:\n- calls_fqns\n- called_by_fqns\n- links: [ { target, type: \"calls\" } ]\n- is_orphaned (recomputed after linkage)",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {}
      },
      "links": [
        {
          "target": "builders.linkage_builder.extract_called_functions",
          "type": "calls"
        }
      ],
      "called_by_fqns": [],
      "calls_fqns": [
        "builders.linkage_builder.extract_called_functions"
      ]
    },
    "builders.linkage_builder.extract_called_functions": {
      "fqname": "builders.linkage_builder.extract_called_functions",
      "type": "function",
      "description": "Parses source code and extracts all function names that are called.",
      "tags": [],
      "source_file": "builders\\linkage_builder.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "builders.linkage_builder.extract_called_functions",
        "module": "builders.linkage_builder",
        "name": "extract_called_functions",
        "type": "function",
        "lineno": 16,
        "source_file": "builders\\linkage_builder.py",
        "description": "Parses source code and extracts all function names that are called.",
        "docstring_full": "Parses source code and extracts all function names that are called.\n\nParameters:\n    source (str): The raw source code of a .py file\n\nReturns:\n    list[str]: All direct call targets (unqualified names)",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "source"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "builders.linkage_builder.extract_called_functions",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "builders.linkage_builder",
        "builders.linkage_builder.extract_called_functions",
        "builders.linkage_builder.inject_call_links"
      ],
      "calls_fqns": [
        "builders.linkage_builder.extract_called_functions"
      ]
    },
    "builders.linkage_builder.inject_call_links": {
      "fqname": "builders.linkage_builder.inject_call_links",
      "type": "function",
      "description": "Injects structural call links into the entity graph.",
      "tags": [],
      "source_file": "builders\\linkage_builder.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "builders.linkage_builder.inject_call_links",
        "module": "builders.linkage_builder",
        "name": "inject_call_links",
        "type": "function",
        "lineno": 43,
        "source_file": "builders\\linkage_builder.py",
        "description": "Injects structural call links into the entity graph.",
        "docstring_full": "Injects structural call links into the entity graph.\n\nParameters:\n    entity_graph (dict): Entity metadata keyed by fqname\n    project_root (str): Project root to re-open source files\n\nReturns:\n    dict: The enriched graph with linkage info",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "entity_graph",
            "project_root"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "builders.linkage_builder.extract_called_functions",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": [
        "builders.linkage_builder.extract_called_functions"
      ]
    },
    "builders.usage_map_builder": {
      "fqname": "builders.usage_map_builder",
      "type": "module",
      "description": "Usage Map Builder (builders)",
      "tags": [],
      "source_file": "builders\\usage_map_builder.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "builders.usage_map_builder",
        "module": "builders.usage_map_builder",
        "name": "builders.usage_map_builder",
        "type": "module",
        "lineno": 1,
        "source_file": "builders\\usage_map_builder.py",
        "description": "Usage Map Builder (builders)",
        "docstring_full": "Usage Map Builder (builders)\n\nConstructs a forward/reverse reference graph showing usage across the entity set.\nUseful for auditing call relationships beyond simple call trees.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "builders.usage_map_builder.build_usage_map": {
      "fqname": "builders.usage_map_builder.build_usage_map",
      "type": "function",
      "description": "Create bidirectional usage summaries for each FQ name.",
      "tags": [],
      "source_file": "builders\\usage_map_builder.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "builders.usage_map_builder.build_usage_map",
        "module": "builders.usage_map_builder",
        "name": "build_usage_map",
        "type": "function",
        "lineno": 11,
        "source_file": "builders\\usage_map_builder.py",
        "description": "Create bidirectional usage summaries for each FQ name.",
        "docstring_full": "Create bidirectional usage summaries for each FQ name.\n\nParameters:\n    graph (dict): Full graph with calls_fqns available on each node\n\nReturns:\n    dict: { fqname: { used_by: [...], uses: [...] } }",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "graph"
          ],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": []
    },
    "builders.variable_usage_builder": {
      "fqname": "builders.variable_usage_builder",
      "type": "module",
      "description": "Variable Usage Map Builder (builders)",
      "tags": [],
      "source_file": "builders\\variable_usage_builder.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "builders.variable_usage_builder",
        "module": "builders.variable_usage_builder",
        "name": "builders.variable_usage_builder",
        "type": "module",
        "lineno": 1,
        "source_file": "builders\\variable_usage_builder.py",
        "description": "Variable Usage Map Builder (builders)",
        "docstring_full": "Variable Usage Map Builder (builders)\n\nFinds all variables (top-level assignments) used in more than one module,\nand records which modules use them.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "builders.variable_usage_builder.build_variable_usage_map": {
      "fqname": "builders.variable_usage_builder.build_variable_usage_map",
      "type": "function",
      "description": "For each variable, scan all other modules for references by name.",
      "tags": [],
      "source_file": "builders\\variable_usage_builder.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "builders.variable_usage_builder.build_variable_usage_map",
        "module": "builders.variable_usage_builder",
        "name": "build_variable_usage_map",
        "type": "function",
        "lineno": 12,
        "source_file": "builders\\variable_usage_builder.py",
        "description": "For each variable, scan all other modules for references by name.",
        "docstring_full": "For each variable, scan all other modules for references by name.\n\nParameters:\n    variables (list): List of variable nodes (from loader, type=='variable')\n    all_source_files (list): List of all source Path objects\n    root_path (Path): Project root for relative paths\n\nReturns:\n    dict: fqname -> list of modules (relative paths) where used",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "variables",
            "all_source_files",
            "root_path"
          ],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "exporters.json_exporter": {
      "fqname": "exporters.json_exporter",
      "type": "module",
      "description": "",
      "tags": [],
      "source_file": "exporters\\json_exporter.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "exporters.json_exporter",
        "module": "exporters.json_exporter",
        "name": "exporters.json_exporter",
        "type": "module",
        "lineno": 1,
        "source_file": "exporters\\json_exporter.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "exporters.json_exporter.export_entity_graph": {
      "fqname": "exporters.json_exporter.export_entity_graph",
      "type": "function",
      "description": "Exports the entity graph as a timestamped JSON file.",
      "tags": [],
      "source_file": "exporters\\json_exporter.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "exporters.json_exporter.export_entity_graph",
        "module": "exporters.json_exporter",
        "name": "export_entity_graph",
        "type": "function",
        "lineno": 8,
        "source_file": "exporters\\json_exporter.py",
        "description": "Exports the entity graph as a timestamped JSON file.",
        "docstring_full": "Exports the entity graph as a timestamped JSON file.\nThe output filename includes both the project name and timestamp for traceability.\nThe file content wraps the graph dict with `timestamp` and `project_name` fields.\n\nArgs:\n    graph (dict): Entity graph.\n    output_dir (Union[str, Path]): Directory for output files.\n    project_name (str): Project name for filename and metadata.\n    timestamp (Optional[str]): Timestamp string (YYYYMMDD_HHMMSS). If not provided, uses current time.\n\nReturns:\n    dict: {\"timestamped\": path to timestamped entity graph JSON file}",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "graph",
            "output_dir",
            "project_name",
            "timestamp"
          ],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": []
    },
    "exporters.markdown_vault_exporter": {
      "fqname": "exporters.markdown_vault_exporter",
      "type": "module",
      "description": "",
      "tags": [],
      "source_file": "exporters\\markdown_vault_exporter.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "exporters.markdown_vault_exporter",
        "module": "exporters.markdown_vault_exporter",
        "name": "exporters.markdown_vault_exporter",
        "type": "module",
        "lineno": 1,
        "source_file": "exporters\\markdown_vault_exporter.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {}
      },
      "links": [
        {
          "target": "exporters.markdown_vault_exporter.friendly_name",
          "type": "calls"
        },
        {
          "target": "exporters.markdown_vault_exporter._sanitize_filename",
          "type": "calls"
        }
      ],
      "called_by_fqns": [],
      "calls_fqns": [
        "exporters.markdown_vault_exporter._sanitize_filename",
        "exporters.markdown_vault_exporter.friendly_name"
      ]
    },
    "exporters.markdown_vault_exporter.friendly_name": {
      "fqname": "exporters.markdown_vault_exporter.friendly_name",
      "type": "function",
      "description": "Returns a human-friendly display name for vault navigation.",
      "tags": [],
      "source_file": "exporters\\markdown_vault_exporter.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "exporters.markdown_vault_exporter.friendly_name",
        "module": "exporters.markdown_vault_exporter",
        "name": "friendly_name",
        "type": "function",
        "lineno": 7,
        "source_file": "exporters\\markdown_vault_exporter.py",
        "description": "Returns a human-friendly display name for vault navigation.",
        "docstring_full": "Returns a human-friendly display name for vault navigation.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "node"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "exporters.markdown_vault_exporter.friendly_name",
          "type": "calls"
        },
        {
          "target": "exporters.markdown_vault_exporter._sanitize_filename",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "exporters.markdown_vault_exporter",
        "exporters.markdown_vault_exporter.friendly_name",
        "exporters.markdown_vault_exporter._sanitize_filename",
        "exporters.markdown_vault_exporter.export_markdown_vault"
      ],
      "calls_fqns": [
        "exporters.markdown_vault_exporter._sanitize_filename",
        "exporters.markdown_vault_exporter.friendly_name"
      ]
    },
    "exporters.markdown_vault_exporter._sanitize_filename": {
      "fqname": "exporters.markdown_vault_exporter._sanitize_filename",
      "type": "function",
      "description": "Sanitizes a string for use as a safe Markdown filename.",
      "tags": [],
      "source_file": "exporters\\markdown_vault_exporter.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "exporters.markdown_vault_exporter._sanitize_filename",
        "module": "exporters.markdown_vault_exporter",
        "name": "_sanitize_filename",
        "type": "function",
        "lineno": 31,
        "source_file": "exporters\\markdown_vault_exporter.py",
        "description": "Sanitizes a string for use as a safe Markdown filename.",
        "docstring_full": "Sanitizes a string for use as a safe Markdown filename.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "name"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "exporters.markdown_vault_exporter.friendly_name",
          "type": "calls"
        },
        {
          "target": "exporters.markdown_vault_exporter._sanitize_filename",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "exporters.markdown_vault_exporter",
        "exporters.markdown_vault_exporter.friendly_name",
        "exporters.markdown_vault_exporter._sanitize_filename",
        "exporters.markdown_vault_exporter.export_markdown_vault",
        "exporters.md_exporter",
        "exporters.md_exporter.export_entity_markdown"
      ],
      "calls_fqns": [
        "exporters.markdown_vault_exporter._sanitize_filename",
        "exporters.markdown_vault_exporter.friendly_name"
      ]
    },
    "exporters.markdown_vault_exporter.export_markdown_vault": {
      "fqname": "exporters.markdown_vault_exporter.export_markdown_vault",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "exporters\\markdown_vault_exporter.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "exporters.markdown_vault_exporter.export_markdown_vault",
        "module": "exporters.markdown_vault_exporter",
        "name": "export_markdown_vault",
        "type": "function",
        "lineno": 46,
        "source_file": "exporters\\markdown_vault_exporter.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [
            "graph",
            "output_dir",
            "project_name",
            "timestamp"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "exporters.markdown_vault_exporter.friendly_name",
          "type": "calls"
        },
        {
          "target": "exporters.markdown_vault_exporter._sanitize_filename",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": [
        "exporters.markdown_vault_exporter._sanitize_filename",
        "exporters.markdown_vault_exporter.friendly_name"
      ]
    },
    "exporters.md_exporter": {
      "fqname": "exporters.md_exporter",
      "type": "module",
      "description": "Markdown Exporter (exporters)",
      "tags": [],
      "source_file": "exporters\\md_exporter.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "exporters.md_exporter",
        "module": "exporters.md_exporter",
        "name": "exporters.md_exporter",
        "type": "module",
        "lineno": 1,
        "source_file": "exporters\\md_exporter.py",
        "description": "Markdown Exporter (exporters)",
        "docstring_full": "Markdown Exporter (exporters)\n\nExports a single code entity as a Markdown file with metadata and Obsidian links.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {}
      },
      "links": [
        {
          "target": "exporters.markdown_vault_exporter._sanitize_filename",
          "type": "calls"
        }
      ],
      "called_by_fqns": [],
      "calls_fqns": [
        "exporters.markdown_vault_exporter._sanitize_filename"
      ]
    },
    "exporters.md_exporter.export_entity_markdown": {
      "fqname": "exporters.md_exporter.export_entity_markdown",
      "type": "function",
      "description": "Export a single entity as a Markdown file with metadata and Obsidian links.",
      "tags": [
        "export",
        "markdown"
      ],
      "source_file": "exporters\\md_exporter.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "exporters.md_exporter.export_entity_markdown",
        "module": "exporters.md_exporter",
        "name": "export_entity_markdown",
        "type": "function",
        "lineno": 11,
        "source_file": "exporters\\md_exporter.py",
        "description": "Export a single entity as a Markdown file with metadata and Obsidian links.",
        "docstring_full": "Export a single entity as a Markdown file with metadata and Obsidian links.\n@tags: [\"export\", \"markdown\"]\n@status: \"stable\"\n@visibility: \"public\"\n\nReturns:\n    str: The full path to the written Markdown file.",
        "tags": [
          "export",
          "markdown"
        ],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": "stable",
        "visibility": "public",
        "docstring_present": true,
        "metadata": {
          "args": [
            "entity",
            "output_dir"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "exporters.markdown_vault_exporter._sanitize_filename",
          "type": "calls"
        }
      ],
      "called_by_fqns": [],
      "calls_fqns": [
        "exporters.markdown_vault_exporter._sanitize_filename"
      ]
    },
    "exporters.usage_map_exporter": {
      "fqname": "exporters.usage_map_exporter",
      "type": "module",
      "description": "",
      "tags": [],
      "source_file": "exporters\\usage_map_exporter.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "exporters.usage_map_exporter",
        "module": "exporters.usage_map_exporter",
        "name": "exporters.usage_map_exporter",
        "type": "module",
        "lineno": 1,
        "source_file": "exporters\\usage_map_exporter.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "exporters.usage_map_exporter.export_usage_map": {
      "fqname": "exporters.usage_map_exporter.export_usage_map",
      "type": "function",
      "description": "Exports the usage map as a timestamped JSON file.",
      "tags": [],
      "source_file": "exporters\\usage_map_exporter.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "exporters.usage_map_exporter.export_usage_map",
        "module": "exporters.usage_map_exporter",
        "name": "export_usage_map",
        "type": "function",
        "lineno": 8,
        "source_file": "exporters\\usage_map_exporter.py",
        "description": "Exports the usage map as a timestamped JSON file.",
        "docstring_full": "Exports the usage map as a timestamped JSON file.\nThe output filename includes both the project name and timestamp for traceability.\nThe file content wraps the usage map dict with `timestamp` and `project_name` fields.\n\nArgs:\n    usage_map (dict): Usage summary dictionary.\n    output_dir (Union[str, Path]): Directory for output files.\n    project_name (str): Project name for filename and metadata.\n    timestamp (Optional[str]): Timestamp string (YYYYMMDD_HHMMSS). If not provided, uses current time.\n\nReturns:\n    dict: {\"timestamped\": path to timestamped usage map JSON file}",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "usage_map",
            "output_dir",
            "project_name",
            "timestamp"
          ],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": []
    },
    "exporters.vault_index_exporter": {
      "fqname": "exporters.vault_index_exporter",
      "type": "module",
      "description": "",
      "tags": [],
      "source_file": "exporters\\vault_index_exporter.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "exporters.vault_index_exporter",
        "module": "exporters.vault_index_exporter",
        "name": "exporters.vault_index_exporter",
        "type": "module",
        "lineno": 1,
        "source_file": "exporters\\vault_index_exporter.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "exporters.vault_index_exporter.export_vault_index": {
      "fqname": "exporters.vault_index_exporter.export_vault_index",
      "type": "function",
      "description": "Export a Markdown index listing all symbols in the vault, grouped by type.",
      "tags": [],
      "source_file": "exporters\\vault_index_exporter.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "exporters.vault_index_exporter.export_vault_index",
        "module": "exporters.vault_index_exporter",
        "name": "export_vault_index",
        "type": "function",
        "lineno": 6,
        "source_file": "exporters\\vault_index_exporter.py",
        "description": "Export a Markdown index listing all symbols in the vault, grouped by type.",
        "docstring_full": "Export a Markdown index listing all symbols in the vault, grouped by type.\n\nArgs:\n    graph (dict): Entity graph containing all symbols.\n    output_dir (Union[str, Path]): Output directory.\n    project_name (str): Optional project name prefix (unused).\n    timestamp (str): Optional timestamp (unused).\n\nReturns:\n    str: Full path to the created index.md file.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "graph",
            "output_dir",
            "project_name",
            "timestamp"
          ],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": []
    },
    "loaders.asset_loader": {
      "fqname": "loaders.asset_loader",
      "type": "module",
      "description": "Asset Loader (loaders)",
      "tags": [],
      "source_file": "loaders\\asset_loader.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "loaders.asset_loader",
        "module": "loaders.asset_loader",
        "name": "loaders.asset_loader",
        "type": "module",
        "lineno": 1,
        "source_file": "loaders\\asset_loader.py",
        "description": "Asset Loader (loaders)",
        "docstring_full": "Asset Loader (loaders)\n\nExtract asset metadata from tracked folders for non-code files and\nemit graph-compliant symbol records for inclusion in the entity graph.\n\nScans all configured asset directories (from `asset_extensions` in `pilconfig.json`)\nand returns standardized metadata records for each valid asset. These are merged into\nthe main entity graph alongside code functions and modules.\n\nSupports extensions like `.png`, `.tmx`, `.glb`, `.sh`, `.json`, etc.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {}
      },
      "links": [
        {
          "target": "loaders.asset_loader.infer_tags_from_path",
          "type": "calls"
        }
      ],
      "called_by_fqns": [],
      "calls_fqns": [
        "loaders.asset_loader.infer_tags_from_path"
      ]
    },
    "loaders.asset_loader.SUPPORTED_EXTENSIONS": {
      "fqname": "loaders.asset_loader.SUPPORTED_EXTENSIONS",
      "type": "variable",
      "description": "",
      "tags": [],
      "source_file": "loaders\\asset_loader.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": "",
      "is_orphaned": false,
      "metadata": {
        "fqname": "loaders.asset_loader.SUPPORTED_EXTENSIONS",
        "module": "loaders.asset_loader",
        "name": "SUPPORTED_EXTENSIONS",
        "type": "variable",
        "lineno": 18,
        "source_file": "loaders\\asset_loader.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": "",
        "deprecated": false,
        "status": "",
        "visibility": "",
        "docstring_present": false,
        "metadata": {}
      },
      "links": [
        {
          "target": "loaders.asset_loader.infer_tags_from_path",
          "type": "calls"
        }
      ],
      "called_by_fqns": [],
      "calls_fqns": [
        "loaders.asset_loader.infer_tags_from_path"
      ]
    },
    "loaders.asset_loader.infer_tags_from_path": {
      "fqname": "loaders.asset_loader.infer_tags_from_path",
      "type": "function",
      "description": "Infer semantic tags from the file path and extension.",
      "tags": [
        "assets",
        "metadata"
      ],
      "source_file": "loaders\\asset_loader.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "loaders.asset_loader.infer_tags_from_path",
        "module": "loaders.asset_loader",
        "name": "infer_tags_from_path",
        "type": "function",
        "lineno": 24,
        "source_file": "loaders\\asset_loader.py",
        "description": "Infer semantic tags from the file path and extension.",
        "docstring_full": "Infer semantic tags from the file path and extension.\n\n@tags: [\"assets\", \"metadata\"]\n@status: \"stable\"\n@visibility: \"internal\"\n\nParameters:\n    filepath (Path): Relative or absolute path to the asset file\n\nReturns:\n    list[str]: Sorted tag list (e.g. [\"assets\", \"maps\", \"tmx\"])",
        "tags": [
          "assets",
          "metadata"
        ],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": "stable",
        "visibility": "internal",
        "docstring_present": true,
        "metadata": {
          "args": [
            "filepath"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "loaders.asset_loader.infer_tags_from_path",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "loaders.asset_loader",
        "loaders.asset_loader.SUPPORTED_EXTENSIONS",
        "loaders.asset_loader.infer_tags_from_path",
        "loaders.asset_loader.export_path_list",
        "loaders.asset_loader.load_asset_symbols"
      ],
      "calls_fqns": [
        "loaders.asset_loader.infer_tags_from_path"
      ]
    },
    "loaders.asset_loader.export_path_list": {
      "fqname": "loaders.asset_loader.export_path_list",
      "type": "function",
      "description": "Resolves path list entries to absolute paths, using config base dir as anchor.",
      "tags": [
        "assets",
        "pathing"
      ],
      "source_file": "loaders\\asset_loader.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "loaders.asset_loader.export_path_list",
        "module": "loaders.asset_loader",
        "name": "export_path_list",
        "type": "function",
        "lineno": 49,
        "source_file": "loaders\\asset_loader.py",
        "description": "Resolves path list entries to absolute paths, using config base dir as anchor.",
        "docstring_full": "Resolves path list entries to absolute paths, using config base dir as anchor.\n\n@tags: [\"assets\", \"pathing\"]\n@status: \"internal\"",
        "tags": [
          "assets",
          "pathing"
        ],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": "internal",
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "paths",
            "config_base_dir"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "loaders.asset_loader.infer_tags_from_path",
          "type": "calls"
        }
      ],
      "called_by_fqns": [],
      "calls_fqns": [
        "loaders.asset_loader.infer_tags_from_path"
      ]
    },
    "loaders.asset_loader.load_asset_symbols": {
      "fqname": "loaders.asset_loader.load_asset_symbols",
      "type": "function",
      "description": "Scan the project_root recursively and extract metadata for all asset files.",
      "tags": [
        "assets",
        "symbol_generation"
      ],
      "source_file": "loaders\\asset_loader.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "loaders.asset_loader.load_asset_symbols",
        "module": "loaders.asset_loader",
        "name": "load_asset_symbols",
        "type": "function",
        "lineno": 66,
        "source_file": "loaders\\asset_loader.py",
        "description": "Scan the project_root recursively and extract metadata for all asset files.",
        "docstring_full": "Scan the project_root recursively and extract metadata for all asset files.\n\n@tags: [\"assets\", \"symbol_generation\"]\n@status: \"stable\"\n@visibility: \"internal\"\n\nParameters:\n    config (dict): Loaded config containing at minimum:\n                   - project_root\n                   - asset_extensions (list)\n                   - ignored_folders (optional)\n\nReturns:\n    list[dict]: Entity graph-ready asset symbol records",
        "tags": [
          "assets",
          "symbol_generation"
        ],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": "stable",
        "visibility": "internal",
        "docstring_present": true,
        "metadata": {
          "args": [
            "config"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "loaders.asset_loader.infer_tags_from_path",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": [
        "loaders.asset_loader.infer_tags_from_path"
      ]
    },
    "loaders.code_loader": {
      "fqname": "loaders.code_loader",
      "type": "module",
      "description": "Code Loader (loaders)",
      "tags": [],
      "source_file": "loaders\\code_loader.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "loaders.code_loader",
        "module": "loaders.code_loader",
        "name": "loaders.code_loader",
        "type": "module",
        "lineno": 1,
        "source_file": "loaders\\code_loader.py",
        "description": "Code Loader (loaders)",
        "docstring_full": "Code Loader (loaders)\n\nWalks the source tree and extracts all top-level symbols (functions, classes, methods, variables, modules).\nEnriches each symbol with structured docstring metadata in bulk for efficient processing.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {}
      },
      "links": [
        {
          "target": "loaders.code_loader.visit",
          "type": "calls"
        },
        {
          "target": "utils.docstring_utils.extract_docstring_metadata",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.extract_nodes_from_ast",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.ParentNodeVisitor",
          "type": "calls"
        },
        {
          "target": "utils.docstring_utils.extract_docstring_metadata",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.visit",
          "type": "calls"
        },
        {
          "target": "utils.docstring_utils.extract_docstring_metadata",
          "type": "calls"
        }
      ],
      "called_by_fqns": [],
      "calls_fqns": [
        "loaders.code_loader.ParentNodeVisitor",
        "loaders.code_loader.extract_nodes_from_ast",
        "loaders.code_loader.visit",
        "utils.docstring_utils.extract_docstring_metadata"
      ]
    },
    "loaders.code_loader.extract_nodes_from_ast": {
      "fqname": "loaders.code_loader.extract_nodes_from_ast",
      "type": "function",
      "description": "Extract all classes, functions, methods, variables, and modules from the AST of a source file.",
      "tags": [
        "loader",
        "code",
        "ast"
      ],
      "source_file": "loaders\\code_loader.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "loaders.code_loader.extract_nodes_from_ast",
        "module": "loaders.code_loader",
        "name": "extract_nodes_from_ast",
        "type": "function",
        "lineno": 15,
        "source_file": "loaders\\code_loader.py",
        "description": "Extract all classes, functions, methods, variables, and modules from the AST of a source file.",
        "docstring_full": "Extract all classes, functions, methods, variables, and modules from the AST of a source file.\n\n@tags: [\"loader\", \"code\", \"ast\"]\n@status: \"stable\"\n@visibility: \"internal\"\n\nArgs:\n    tree (ast.AST): The parsed AST of the source file.\n    source_file (Path): The full path to the source file.\n    root_path (Path): The project root path to calculate relative paths.\n\nReturns:\n    List[Dict[str, Any]]: A list of enriched symbol dictionaries.",
        "tags": [
          "loader",
          "code",
          "ast"
        ],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": "stable",
        "visibility": "internal",
        "docstring_present": true,
        "metadata": {
          "args": [
            "tree",
            "source_file",
            "root_path"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "loaders.code_loader.visit",
          "type": "calls"
        },
        {
          "target": "utils.docstring_utils.extract_docstring_metadata",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.extract_nodes_from_ast",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.ParentNodeVisitor",
          "type": "calls"
        },
        {
          "target": "utils.docstring_utils.extract_docstring_metadata",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.visit",
          "type": "calls"
        },
        {
          "target": "utils.docstring_utils.extract_docstring_metadata",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "loaders.code_loader",
        "loaders.code_loader.extract_nodes_from_ast",
        "loaders.code_loader.load_code_symbols",
        "loaders.code_loader.ParentNodeVisitor",
        "loaders.code_loader.visit"
      ],
      "calls_fqns": [
        "loaders.code_loader.ParentNodeVisitor",
        "loaders.code_loader.extract_nodes_from_ast",
        "loaders.code_loader.visit",
        "utils.docstring_utils.extract_docstring_metadata"
      ]
    },
    "loaders.code_loader.load_code_symbols": {
      "fqname": "loaders.code_loader.load_code_symbols",
      "type": "function",
      "description": "Parse a single Python file and return a list of symbols with metadata.",
      "tags": [
        "loader",
        "code"
      ],
      "source_file": "loaders\\code_loader.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "loaders.code_loader.load_code_symbols",
        "module": "loaders.code_loader",
        "name": "load_code_symbols",
        "type": "function",
        "lineno": 174,
        "source_file": "loaders\\code_loader.py",
        "description": "Parse a single Python file and return a list of symbols with metadata.",
        "docstring_full": "Parse a single Python file and return a list of symbols with metadata.\n\n@tags: [\"loader\", \"code\"]\n@status: \"stable\"\n@visibility: \"internal\"\n\nArgs:\n    pyfile_path (str): Path to .py file.\n    project_root (str): Project root directory (absolute).\n\nReturns:\n    list of dicts: Each with type, name, fqname, module, lineno, doc.",
        "tags": [
          "loader",
          "code"
        ],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": "stable",
        "visibility": "internal",
        "docstring_present": true,
        "metadata": {
          "args": [
            "pyfile_path",
            "project_root"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "loaders.code_loader.visit",
          "type": "calls"
        },
        {
          "target": "utils.docstring_utils.extract_docstring_metadata",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.extract_nodes_from_ast",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.ParentNodeVisitor",
          "type": "calls"
        },
        {
          "target": "utils.docstring_utils.extract_docstring_metadata",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.visit",
          "type": "calls"
        },
        {
          "target": "utils.docstring_utils.extract_docstring_metadata",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": [
        "loaders.code_loader.ParentNodeVisitor",
        "loaders.code_loader.extract_nodes_from_ast",
        "loaders.code_loader.visit",
        "utils.docstring_utils.extract_docstring_metadata"
      ]
    },
    "loaders.code_loader.ParentNodeVisitor": {
      "fqname": "loaders.code_loader.ParentNodeVisitor",
      "type": "class",
      "description": "",
      "tags": [],
      "source_file": "loaders\\code_loader.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "loaders.code_loader.ParentNodeVisitor",
        "module": "loaders.code_loader",
        "name": "ParentNodeVisitor",
        "type": "class",
        "lineno": 40,
        "source_file": "loaders\\code_loader.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {}
      },
      "links": [
        {
          "target": "loaders.code_loader.visit",
          "type": "calls"
        },
        {
          "target": "utils.docstring_utils.extract_docstring_metadata",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.extract_nodes_from_ast",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.ParentNodeVisitor",
          "type": "calls"
        },
        {
          "target": "utils.docstring_utils.extract_docstring_metadata",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.visit",
          "type": "calls"
        },
        {
          "target": "utils.docstring_utils.extract_docstring_metadata",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "loaders.code_loader",
        "loaders.code_loader.extract_nodes_from_ast",
        "loaders.code_loader.load_code_symbols",
        "loaders.code_loader.ParentNodeVisitor",
        "loaders.code_loader.visit"
      ],
      "calls_fqns": [
        "loaders.code_loader.ParentNodeVisitor",
        "loaders.code_loader.extract_nodes_from_ast",
        "loaders.code_loader.visit",
        "utils.docstring_utils.extract_docstring_metadata"
      ]
    },
    "loaders.code_loader.visit": {
      "fqname": "loaders.code_loader.visit",
      "type": "method",
      "description": "",
      "tags": [],
      "source_file": "loaders\\code_loader.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "loaders.code_loader.visit",
        "module": "loaders.code_loader",
        "name": "visit",
        "type": "method",
        "lineno": 41,
        "source_file": "loaders\\code_loader.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [
            "self",
            "node"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "loaders.code_loader.visit",
          "type": "calls"
        },
        {
          "target": "utils.docstring_utils.extract_docstring_metadata",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.extract_nodes_from_ast",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.ParentNodeVisitor",
          "type": "calls"
        },
        {
          "target": "utils.docstring_utils.extract_docstring_metadata",
          "type": "calls"
        },
        {
          "target": "loaders.code_loader.visit",
          "type": "calls"
        },
        {
          "target": "utils.docstring_utils.extract_docstring_metadata",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "loaders.code_loader",
        "loaders.code_loader",
        "loaders.code_loader.extract_nodes_from_ast",
        "loaders.code_loader.extract_nodes_from_ast",
        "loaders.code_loader.load_code_symbols",
        "loaders.code_loader.load_code_symbols",
        "loaders.code_loader.ParentNodeVisitor",
        "loaders.code_loader.ParentNodeVisitor",
        "loaders.code_loader.visit",
        "loaders.code_loader.visit",
        "utils.graph_utils",
        "utils.graph_utils.walk_graph"
      ],
      "calls_fqns": [
        "loaders.code_loader.ParentNodeVisitor",
        "loaders.code_loader.extract_nodes_from_ast",
        "loaders.code_loader.visit",
        "utils.docstring_utils.extract_docstring_metadata"
      ]
    },
    "loaders.config_loader": {
      "fqname": "loaders.config_loader",
      "type": "module",
      "description": "Config Loader (loaders)",
      "tags": [],
      "source_file": "loaders\\config_loader.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "loaders.config_loader",
        "module": "loaders.config_loader",
        "name": "loaders.config_loader",
        "type": "module",
        "lineno": 1,
        "source_file": "loaders\\config_loader.py",
        "description": "Config Loader (loaders)",
        "docstring_full": "Config Loader (loaders)\n\nLoads and validates the pilconfig.json configuration file for the PIL project.\nAll relevant paths are resolved as absolute, relative to the config file location.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "loaders.config_loader.load_config": {
      "fqname": "loaders.config_loader.load_config",
      "type": "function",
      "description": "Load the PIL project configuration from pilconfig.json and resolve all important paths.",
      "tags": [],
      "source_file": "loaders\\config_loader.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "loaders.config_loader.load_config",
        "module": "loaders.config_loader",
        "name": "load_config",
        "type": "function",
        "lineno": 12,
        "source_file": "loaders\\config_loader.py",
        "description": "Load the PIL project configuration from pilconfig.json and resolve all important paths.",
        "docstring_full": "Load the PIL project configuration from pilconfig.json and resolve all important paths.\n\nArgs:\n    config_path (str): Path to pilconfig.json file (absolute or relative)\n\nReturns:\n    dict: Configuration fields as a dictionary, all relevant paths absolute.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "config_path"
          ],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": []
    },
    "loaders.markdown_loader": {
      "fqname": "loaders.markdown_loader",
      "type": "module",
      "description": "Markdown Loader",
      "tags": [],
      "source_file": "loaders\\markdown_loader.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "loaders.markdown_loader",
        "module": "loaders.markdown_loader",
        "name": "loaders.markdown_loader",
        "type": "module",
        "lineno": 1,
        "source_file": "loaders\\markdown_loader.py",
        "description": "Markdown Loader",
        "docstring_full": "Markdown Loader\n\nLoads and parses all Markdown (.md) files from a documentation or journal directory.\nExtracts frontmatter, tags, and optional code crosslinks for later graph integration.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {}
      },
      "links": [
        {
          "target": "loaders.markdown_loader.parse_frontmatter",
          "type": "calls"
        }
      ],
      "called_by_fqns": [],
      "calls_fqns": [
        "loaders.markdown_loader.parse_frontmatter"
      ]
    },
    "loaders.markdown_loader.FRONTMATTER_RE": {
      "fqname": "loaders.markdown_loader.FRONTMATTER_RE",
      "type": "variable",
      "description": "",
      "tags": [],
      "source_file": "loaders\\markdown_loader.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": "",
      "is_orphaned": false,
      "metadata": {
        "fqname": "loaders.markdown_loader.FRONTMATTER_RE",
        "module": "loaders.markdown_loader",
        "name": "FRONTMATTER_RE",
        "type": "variable",
        "lineno": 14,
        "source_file": "loaders\\markdown_loader.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": "",
        "deprecated": false,
        "status": "",
        "visibility": "",
        "docstring_present": false,
        "metadata": {}
      },
      "links": [
        {
          "target": "loaders.markdown_loader.parse_frontmatter",
          "type": "calls"
        }
      ],
      "called_by_fqns": [],
      "calls_fqns": [
        "loaders.markdown_loader.parse_frontmatter"
      ]
    },
    "loaders.markdown_loader.parse_frontmatter": {
      "fqname": "loaders.markdown_loader.parse_frontmatter",
      "type": "function",
      "description": "Extract YAML frontmatter as a dict, if present.",
      "tags": [],
      "source_file": "loaders\\markdown_loader.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "loaders.markdown_loader.parse_frontmatter",
        "module": "loaders.markdown_loader",
        "name": "parse_frontmatter",
        "type": "function",
        "lineno": 16,
        "source_file": "loaders\\markdown_loader.py",
        "description": "Extract YAML frontmatter as a dict, if present.",
        "docstring_full": "Extract YAML frontmatter as a dict, if present.\n\nArgs:\n    md_content (str): Raw contents of a markdown file.\n\nReturns:\n    dict: Parsed frontmatter, or empty dict if none present.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "md_content"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "loaders.markdown_loader.parse_frontmatter",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "loaders.markdown_loader",
        "loaders.markdown_loader.FRONTMATTER_RE",
        "loaders.markdown_loader.parse_frontmatter",
        "loaders.markdown_loader.load_markdown_entries"
      ],
      "calls_fqns": [
        "loaders.markdown_loader.parse_frontmatter"
      ]
    },
    "loaders.markdown_loader.load_markdown_entries": {
      "fqname": "loaders.markdown_loader.load_markdown_entries",
      "type": "function",
      "description": "Load all .md files from a directory and extract metadata for each.",
      "tags": [],
      "source_file": "loaders\\markdown_loader.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "loaders.markdown_loader.load_markdown_entries",
        "module": "loaders.markdown_loader",
        "name": "load_markdown_entries",
        "type": "function",
        "lineno": 38,
        "source_file": "loaders\\markdown_loader.py",
        "description": "Load all .md files from a directory and extract metadata for each.",
        "docstring_full": "Load all .md files from a directory and extract metadata for each.\n\nArgs:\n    journal_dir (str): Path to the journal or docs directory (absolute or relative)\n\nReturns:\n    List[dict]: Each with filename, frontmatter, content, tags",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "journal_dir"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "loaders.markdown_loader.parse_frontmatter",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": [
        "loaders.markdown_loader.parse_frontmatter"
      ]
    },
    "utils.docstring_utils": {
      "fqname": "utils.docstring_utils",
      "type": "module",
      "description": "Docstring Utilities (utils)",
      "tags": [
        "docstring",
        "metadata",
        "parsing"
      ],
      "source_file": "utils\\docstring_utils.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "utils.docstring_utils",
        "module": "utils.docstring_utils",
        "name": "utils.docstring_utils",
        "type": "module",
        "lineno": 1,
        "source_file": "utils\\docstring_utils.py",
        "description": "Docstring Utilities (utils)",
        "docstring_full": "Docstring Utilities (utils)\n\nHouses reusable docstring validation logic shared across pipeline components.\nAlso supports docstring extraction and structured annotation parsing.\n\n@tags: [\"docstring\", \"metadata\", \"parsing\"]\n@status: \"stable\"\n@visibility: \"internal\"",
        "tags": [
          "docstring",
          "metadata",
          "parsing"
        ],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": "stable",
        "visibility": "internal",
        "docstring_present": true,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "utils.docstring_utils.check_docstring_signature_match": {
      "fqname": "utils.docstring_utils.check_docstring_signature_match",
      "type": "function",
      "description": "Checks if the function docstring references the function name and its parameters.",
      "tags": [
        "validation",
        "docstring"
      ],
      "source_file": "utils\\docstring_utils.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "utils.docstring_utils.check_docstring_signature_match",
        "module": "utils.docstring_utils",
        "name": "check_docstring_signature_match",
        "type": "function",
        "lineno": 17,
        "source_file": "utils\\docstring_utils.py",
        "description": "Checks if the function docstring references the function name and its parameters.",
        "docstring_full": "Checks if the function docstring references the function name and its parameters.\n\n@tags: [\"validation\", \"docstring\"]\n@status: \"stable\"\n@visibility: \"internal\"\n\nParameters:\n    node (dict): Metadata dictionary for a function or method.\n\nReturns:\n    bool: True if name and all params appear in the first line of the docstring",
        "tags": [
          "validation",
          "docstring"
        ],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": "stable",
        "visibility": "internal",
        "docstring_present": true,
        "metadata": {
          "args": [
            "node"
          ],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "utils.docstring_utils.extract_docstring_metadata": {
      "fqname": "utils.docstring_utils.extract_docstring_metadata",
      "type": "function",
      "description": "Extracts structured metadata from a docstring.",
      "tags": [
        "tag1",
        "tag2"
      ],
      "source_file": "utils\\docstring_utils.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": "linked entry",
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.docstring_utils.extract_docstring_metadata",
        "module": "utils.docstring_utils",
        "name": "extract_docstring_metadata",
        "type": "function",
        "lineno": 40,
        "source_file": "utils\\docstring_utils.py",
        "description": "Extracts structured metadata from a docstring.",
        "docstring_full": "Extracts structured metadata from a docstring.\n\n@tags: [\"parser\", \"metadata\"]\n@status: \"stable\"\n@visibility: \"internal\"\n\nParameters:\n    docstring (str): Full function/class/module docstring\n\nReturns:\n    dict: Contains 'description', 'docstring_full', 'tags', 'journal', 'deprecated', plus optional future fields.\n\nSupports:\n    - @tags: [\"tag1\", \"tag2\"]\n    - @journal: \"linked entry\"\n    - @deprecated\n    - @status: \"draft\"\n    - @visibility: \"internal\"",
        "tags": [
          "tag1",
          "tag2"
        ],
        "linked_journal_entry": "linked entry",
        "deprecated": true,
        "status": "draft",
        "visibility": "internal",
        "docstring_present": true,
        "metadata": {
          "args": [
            "docstring"
          ],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [
        "loaders.code_loader",
        "loaders.code_loader",
        "loaders.code_loader",
        "loaders.code_loader.extract_nodes_from_ast",
        "loaders.code_loader.extract_nodes_from_ast",
        "loaders.code_loader.extract_nodes_from_ast",
        "loaders.code_loader.load_code_symbols",
        "loaders.code_loader.load_code_symbols",
        "loaders.code_loader.load_code_symbols",
        "loaders.code_loader.ParentNodeVisitor",
        "loaders.code_loader.ParentNodeVisitor",
        "loaders.code_loader.ParentNodeVisitor",
        "loaders.code_loader.visit",
        "loaders.code_loader.visit",
        "loaders.code_loader.visit"
      ],
      "calls_fqns": []
    },
    "utils.export_cleanup_utils": {
      "fqname": "utils.export_cleanup_utils",
      "type": "module",
      "description": "Cleans the exports directory before writing new output files.",
      "tags": [],
      "source_file": "utils\\export_cleanup_utils.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "utils.export_cleanup_utils",
        "module": "utils.export_cleanup_utils",
        "name": "utils.export_cleanup_utils",
        "type": "module",
        "lineno": 1,
        "source_file": "utils\\export_cleanup_utils.py",
        "description": "Cleans the exports directory before writing new output files.",
        "docstring_full": "Cleans the exports directory before writing new output files.\n\nRemoves:\n- entity graph JSONs\n- function map exceptions\n- usage maps\n- variable usage reports\n\nLeaves:\n- Markdown vault content (assumed to be overwritten cleanly)\n- Snapshots (handled separately)",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "utils.export_cleanup_utils.clean_exports_dir": {
      "fqname": "utils.export_cleanup_utils.clean_exports_dir",
      "type": "function",
      "description": "Removes stale JSON exports before writing new ones.",
      "tags": [
        "cleanup",
        "exports"
      ],
      "source_file": "utils\\export_cleanup_utils.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.export_cleanup_utils.clean_exports_dir",
        "module": "utils.export_cleanup_utils",
        "name": "clean_exports_dir",
        "type": "function",
        "lineno": 19,
        "source_file": "utils\\export_cleanup_utils.py",
        "description": "Removes stale JSON exports before writing new ones.",
        "docstring_full": "Removes stale JSON exports before writing new ones.\n\n@tags: [\"cleanup\", \"exports\"]\n@status: \"stable\"\n@visibility: \"internal\"\n\nArgs:\n    export_dir (str): Path to the exports/ directory",
        "tags": [
          "cleanup",
          "exports"
        ],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": "stable",
        "visibility": "internal",
        "docstring_present": true,
        "metadata": {
          "args": [
            "export_dir"
          ],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": []
    },
    "utils.graph_utils": {
      "fqname": "utils.graph_utils",
      "type": "module",
      "description": "Graph Utilities",
      "tags": [],
      "source_file": "utils\\graph_utils.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.graph_utils",
        "module": "utils.graph_utils",
        "name": "utils.graph_utils",
        "type": "module",
        "lineno": 1,
        "source_file": "utils\\graph_utils.py",
        "description": "Graph Utilities",
        "docstring_full": "Graph Utilities\n\nCommon functions for working with the code entity graph: walking nodes, traversing edges, etc.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {}
      },
      "links": [
        {
          "target": "loaders.code_loader.visit",
          "type": "calls"
        }
      ],
      "called_by_fqns": [],
      "calls_fqns": [
        "loaders.code_loader.visit"
      ]
    },
    "utils.graph_utils.walk_graph": {
      "fqname": "utils.graph_utils.walk_graph",
      "type": "function",
      "description": "Walk the entity graph, applying a visitor function to each node.",
      "tags": [],
      "source_file": "utils\\graph_utils.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.graph_utils.walk_graph",
        "module": "utils.graph_utils",
        "name": "walk_graph",
        "type": "function",
        "lineno": 9,
        "source_file": "utils\\graph_utils.py",
        "description": "Walk the entity graph, applying a visitor function to each node.",
        "docstring_full": "Walk the entity graph, applying a visitor function to each node.\nOptionally start at a subset of nodes; otherwise walk all.\n\nArgs:\n    graph (dict): { fqname: node dict }\n    visit (callable): function(fqname, node)\n    start_nodes (set): Subset of fqn names to start from (optional)",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "graph",
            "visit",
            "start_nodes"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "loaders.code_loader.visit",
          "type": "calls"
        }
      ],
      "called_by_fqns": [],
      "calls_fqns": [
        "loaders.code_loader.visit"
      ]
    },
    "utils.messaging_utils": {
      "fqname": "utils.messaging_utils",
      "type": "module",
      "description": "Centralized messaging utility for PIL with structured reporting format.",
      "tags": [
        "utility",
        "messaging",
        "reporting"
      ],
      "source_file": "utils\\messaging_utils.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.messaging_utils",
        "module": "utils.messaging_utils",
        "name": "utils.messaging_utils",
        "type": "module",
        "lineno": 1,
        "source_file": "utils\\messaging_utils.py",
        "description": "Centralized messaging utility for PIL with structured reporting format.",
        "docstring_full": "Centralized messaging utility for PIL with structured reporting format.\nSupports clean, grouped output with headers, emojis, and indentation.\n\n@tags: [\"utility\", \"messaging\", \"reporting\"]\n@status: \"stable\"\n@visibility: \"public\"",
        "tags": [
          "utility",
          "messaging",
          "reporting"
        ],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": "stable",
        "visibility": "public",
        "docstring_present": true,
        "metadata": {}
      },
      "links": [
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        }
      ],
      "called_by_fqns": [],
      "calls_fqns": [
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning"
      ]
    },
    "utils.messaging_utils.DEBUG_ENABLED": {
      "fqname": "utils.messaging_utils.DEBUG_ENABLED",
      "type": "variable",
      "description": "",
      "tags": [],
      "source_file": "utils\\messaging_utils.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": "",
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.messaging_utils.DEBUG_ENABLED",
        "module": "utils.messaging_utils",
        "name": "DEBUG_ENABLED",
        "type": "variable",
        "lineno": 13,
        "source_file": "utils\\messaging_utils.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": "",
        "deprecated": false,
        "status": "",
        "visibility": "",
        "docstring_present": false,
        "metadata": {}
      },
      "links": [
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        }
      ],
      "called_by_fqns": [],
      "calls_fqns": [
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning"
      ]
    },
    "utils.messaging_utils.set_debug": {
      "fqname": "utils.messaging_utils.set_debug",
      "type": "function",
      "description": "Enable or disable debug messages globally.",
      "tags": [],
      "source_file": "utils\\messaging_utils.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.messaging_utils.set_debug",
        "module": "utils.messaging_utils",
        "name": "set_debug",
        "type": "function",
        "lineno": 15,
        "source_file": "utils\\messaging_utils.py",
        "description": "Enable or disable debug messages globally.",
        "docstring_full": "Enable or disable debug messages globally.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "enabled"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": [
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning"
      ]
    },
    "utils.messaging_utils.debug": {
      "fqname": "utils.messaging_utils.debug",
      "type": "function",
      "description": "Print debug messages if debug enabled.",
      "tags": [],
      "source_file": "utils\\messaging_utils.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.messaging_utils.debug",
        "module": "utils.messaging_utils",
        "name": "debug",
        "type": "function",
        "lineno": 20,
        "source_file": "utils\\messaging_utils.py",
        "description": "Print debug messages if debug enabled.",
        "docstring_full": "Print debug messages if debug enabled.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "msg",
            "indent"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        }
      ],
      "called_by_fqns": [],
      "calls_fqns": [
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning"
      ]
    },
    "utils.messaging_utils._print_section_header": {
      "fqname": "utils.messaging_utils._print_section_header",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "utils\\messaging_utils.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.messaging_utils._print_section_header",
        "module": "utils.messaging_utils",
        "name": "_print_section_header",
        "type": "function",
        "lineno": 26,
        "source_file": "utils\\messaging_utils.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [
            "title",
            "icon"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete"
      ],
      "calls_fqns": [
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning"
      ]
    },
    "utils.messaging_utils.info": {
      "fqname": "utils.messaging_utils.info",
      "type": "function",
      "description": "Print informational message with optional indentation.",
      "tags": [],
      "source_file": "utils\\messaging_utils.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.messaging_utils.info",
        "module": "utils.messaging_utils",
        "name": "info",
        "type": "function",
        "lineno": 29,
        "source_file": "utils\\messaging_utils.py",
        "description": "Print informational message with optional indentation.",
        "docstring_full": "Print informational message with optional indentation.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "msg",
            "indent"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete"
      ],
      "calls_fqns": [
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning"
      ]
    },
    "utils.messaging_utils.warning": {
      "fqname": "utils.messaging_utils.warning",
      "type": "function",
      "description": "Print warning message with optional indentation.",
      "tags": [],
      "source_file": "utils\\messaging_utils.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.messaging_utils.warning",
        "module": "utils.messaging_utils",
        "name": "warning",
        "type": "function",
        "lineno": 34,
        "source_file": "utils\\messaging_utils.py",
        "description": "Print warning message with optional indentation.",
        "docstring_full": "Print warning message with optional indentation.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "msg",
            "indent"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.DEBUG_ENABLED",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.set_debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils.debug",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.warning",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.error",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_run_context",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_folder_tree_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_asset_scan_summary",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_symbol_extraction",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_entity_graph",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_exports",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_governance_summary",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_journal_entries_loaded",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete",
        "utils.messaging_utils.print_pipeline_complete"
      ],
      "calls_fqns": [
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning"
      ]
    },
    "utils.messaging_utils.error": {
      "fqname": "utils.messaging_utils.error",
      "type": "function",
      "description": "Print error message with optional indentation.",
      "tags": [],
      "source_file": "utils\\messaging_utils.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.messaging_utils.error",
        "module": "utils.messaging_utils",
        "name": "error",
        "type": "function",
        "lineno": 39,
        "source_file": "utils\\messaging_utils.py",
        "description": "Print error message with optional indentation.",
        "docstring_full": "Print error message with optional indentation.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "msg",
            "indent"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        }
      ],
      "called_by_fqns": [],
      "calls_fqns": [
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning"
      ]
    },
    "utils.messaging_utils.print_run_context": {
      "fqname": "utils.messaging_utils.print_run_context",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "utils\\messaging_utils.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.messaging_utils.print_run_context",
        "module": "utils.messaging_utils",
        "name": "print_run_context",
        "type": "function",
        "lineno": 44,
        "source_file": "utils\\messaging_utils.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [
            "script",
            "config",
            "date"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": [
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning"
      ]
    },
    "utils.messaging_utils.print_folder_tree_summary": {
      "fqname": "utils.messaging_utils.print_folder_tree_summary",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "utils\\messaging_utils.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.messaging_utils.print_folder_tree_summary",
        "module": "utils.messaging_utils",
        "name": "print_folder_tree_summary",
        "type": "function",
        "lineno": 50,
        "source_file": "utils\\messaging_utils.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [
            "tree_lines"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": [
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning"
      ]
    },
    "utils.messaging_utils.print_asset_scan_summary": {
      "fqname": "utils.messaging_utils.print_asset_scan_summary",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "utils\\messaging_utils.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.messaging_utils.print_asset_scan_summary",
        "module": "utils.messaging_utils",
        "name": "print_asset_scan_summary",
        "type": "function",
        "lineno": 55,
        "source_file": "utils\\messaging_utils.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [
            "supported",
            "found_count"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": [
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning"
      ]
    },
    "utils.messaging_utils.print_symbol_extraction": {
      "fqname": "utils.messaging_utils.print_symbol_extraction",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "utils\\messaging_utils.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.messaging_utils.print_symbol_extraction",
        "module": "utils.messaging_utils",
        "name": "print_symbol_extraction",
        "type": "function",
        "lineno": 60,
        "source_file": "utils\\messaging_utils.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [
            "code_symbols",
            "asset_files",
            "root"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": [
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning"
      ]
    },
    "utils.messaging_utils.print_entity_graph": {
      "fqname": "utils.messaging_utils.print_entity_graph",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "utils\\messaging_utils.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.messaging_utils.print_entity_graph",
        "module": "utils.messaging_utils",
        "name": "print_entity_graph",
        "type": "function",
        "lineno": 66,
        "source_file": "utils\\messaging_utils.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [
            "nodes",
            "linkages_injected"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": [
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning"
      ]
    },
    "utils.messaging_utils.print_exports": {
      "fqname": "utils.messaging_utils.print_exports",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "utils\\messaging_utils.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.messaging_utils.print_exports",
        "module": "utils.messaging_utils",
        "name": "print_exports",
        "type": "function",
        "lineno": 71,
        "source_file": "utils\\messaging_utils.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [
            "export_paths",
            "vault_files_count",
            "index_path"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": [
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning"
      ]
    },
    "utils.messaging_utils.print_governance_summary": {
      "fqname": "utils.messaging_utils.print_governance_summary",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "utils\\messaging_utils.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.messaging_utils.print_governance_summary",
        "module": "utils.messaging_utils",
        "name": "print_governance_summary",
        "type": "function",
        "lineno": 79,
        "source_file": "utils\\messaging_utils.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [
            "missing_docstrings",
            "orphaned"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": [
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning"
      ]
    },
    "utils.messaging_utils.print_journal_entries_loaded": {
      "fqname": "utils.messaging_utils.print_journal_entries_loaded",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "utils\\messaging_utils.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.messaging_utils.print_journal_entries_loaded",
        "module": "utils.messaging_utils",
        "name": "print_journal_entries_loaded",
        "type": "function",
        "lineno": 90,
        "source_file": "utils\\messaging_utils.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [
            "count"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": [
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning"
      ]
    },
    "utils.messaging_utils.print_pipeline_complete": {
      "fqname": "utils.messaging_utils.print_pipeline_complete",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "utils\\messaging_utils.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.messaging_utils.print_pipeline_complete",
        "module": "utils.messaging_utils",
        "name": "print_pipeline_complete",
        "type": "function",
        "lineno": 94,
        "source_file": "utils\\messaging_utils.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [
            "snapshot_count",
            "snapshot_path"
          ],
          "returns": null
        }
      },
      "links": [
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils._print_section_header",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.info",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        },
        {
          "target": "utils.messaging_utils.warning",
          "type": "calls"
        }
      ],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": [
        "utils.messaging_utils._print_section_header",
        "utils.messaging_utils.info",
        "utils.messaging_utils.warning"
      ]
    },
    "utils.path_utils": {
      "fqname": "utils.path_utils",
      "type": "module",
      "description": "Path Utilities",
      "tags": [],
      "source_file": "utils\\path_utils.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "utils.path_utils",
        "module": "utils.path_utils",
        "name": "utils.path_utils",
        "type": "module",
        "lineno": 1,
        "source_file": "utils\\path_utils.py",
        "description": "Path Utilities",
        "docstring_full": "Path Utilities\n\nFunctions for resolving and normalizing paths across PIL modules.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "utils.path_utils.resolve_path": {
      "fqname": "utils.path_utils.resolve_path",
      "type": "function",
      "description": "Resolve a given path (relative or absolute) to an absolute, normalized string.",
      "tags": [],
      "source_file": "utils\\path_utils.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "utils.path_utils.resolve_path",
        "module": "utils.path_utils",
        "name": "resolve_path",
        "type": "function",
        "lineno": 11,
        "source_file": "utils\\path_utils.py",
        "description": "Resolve a given path (relative or absolute) to an absolute, normalized string.",
        "docstring_full": "Resolve a given path (relative or absolute) to an absolute, normalized string.\n\nArgs:\n    path (str): File or directory path (can be relative)\n    base (str, optional): Base directory to resolve from (if given)\n\nReturns:\n    str: Absolute, normalized path",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "path",
            "base"
          ],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "utils.snapshot_utils": {
      "fqname": "utils.snapshot_utils",
      "type": "module",
      "description": "Utility to create a zip snapshot of the full project for archival or traceability.",
      "tags": [
        "utility",
        "snapshot",
        "archive"
      ],
      "source_file": "utils\\snapshot_utils.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "utils.snapshot_utils",
        "module": "utils.snapshot_utils",
        "name": "utils.snapshot_utils",
        "type": "module",
        "lineno": 1,
        "source_file": "utils\\snapshot_utils.py",
        "description": "Utility to create a zip snapshot of the full project for archival or traceability.",
        "docstring_full": "Utility to create a zip snapshot of the full project for archival or traceability.\n\nThis should be called from within pipeline.py using:\n    from pil_meta.utils.snapshot_utils import take_project_snapshot\n\n@tags: [\"utility\", \"snapshot\", \"archive\"]\n@status: \"stable\"\n@visibility: \"public\"",
        "tags": [
          "utility",
          "snapshot",
          "archive"
        ],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": "stable",
        "visibility": "public",
        "docstring_present": true,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "utils.snapshot_utils.IGNORED_FOLDERS": {
      "fqname": "utils.snapshot_utils.IGNORED_FOLDERS",
      "type": "variable",
      "description": "",
      "tags": [],
      "source_file": "utils\\snapshot_utils.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": "",
      "is_orphaned": true,
      "metadata": {
        "fqname": "utils.snapshot_utils.IGNORED_FOLDERS",
        "module": "utils.snapshot_utils",
        "name": "IGNORED_FOLDERS",
        "type": "variable",
        "lineno": 19,
        "source_file": "utils\\snapshot_utils.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": "",
        "deprecated": false,
        "status": "",
        "visibility": "",
        "docstring_present": false,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "utils.snapshot_utils.take_project_snapshot": {
      "fqname": "utils.snapshot_utils.take_project_snapshot",
      "type": "function",
      "description": "Creates a compressed zip snapshot of the entire project_root.",
      "tags": [
        "snapshot",
        "archive"
      ],
      "source_file": "utils\\snapshot_utils.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": false,
      "metadata": {
        "fqname": "utils.snapshot_utils.take_project_snapshot",
        "module": "utils.snapshot_utils",
        "name": "take_project_snapshot",
        "type": "function",
        "lineno": 24,
        "source_file": "utils\\snapshot_utils.py",
        "description": "Creates a compressed zip snapshot of the entire project_root.",
        "docstring_full": "Creates a compressed zip snapshot of the entire project_root.\nOptionally attaches entity_graph.json for traceability and audit.\n\nArgs:\n    config (dict): Loaded pilconfig for current run.\n    entity_graph_path (str, optional): Path to entity graph export, if available.\n\nReturns:\n    Path: Full path to the created snapshot zip.\n@tags: [\"snapshot\", \"archive\"]\n@status: \"stable\"",
        "tags": [
          "snapshot",
          "archive"
        ],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": "stable",
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "config",
            "entity_graph_path"
          ],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [
        "pipeline",
        "pipeline.PipelineResult",
        "pipeline.print_full_report",
        "pipeline.run_pipeline",
        "pipeline.__init__"
      ],
      "calls_fqns": []
    },
    "utils.test_coverage_utils": {
      "fqname": "utils.test_coverage_utils",
      "type": "module",
      "description": "Test Coverage Utilities (utils)",
      "tags": [],
      "source_file": "utils\\test_coverage_utils.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "utils.test_coverage_utils",
        "module": "utils.test_coverage_utils",
        "name": "utils.test_coverage_utils",
        "type": "module",
        "lineno": 1,
        "source_file": "utils\\test_coverage_utils.py",
        "description": "Test Coverage Utilities (utils)",
        "docstring_full": "Test Coverage Utilities (utils)\n\nProvides functions to estimate static test coverage by scanning test files\nand matching function/method/class names to code symbols.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "utils.test_coverage_utils.estimate_test_coverage": {
      "fqname": "utils.test_coverage_utils.estimate_test_coverage",
      "type": "function",
      "description": "Updates the 'test_coverage' field for each symbol based on whether",
      "tags": [],
      "source_file": "utils\\test_coverage_utils.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "utils.test_coverage_utils.estimate_test_coverage",
        "module": "utils.test_coverage_utils",
        "name": "estimate_test_coverage",
        "type": "function",
        "lineno": 13,
        "source_file": "utils\\test_coverage_utils.py",
        "description": "Updates the 'test_coverage' field for each symbol based on whether",
        "docstring_full": "Updates the 'test_coverage' field for each symbol based on whether\nits function/class/method name appears in any test file.\n\nParameters:\n    symbols (list[dict]): List of code symbol metadata dicts.\n    test_dir (str): Directory containing test files.\n\nReturns:\n    list[dict]: The same list, with 'test_coverage' set for each symbol.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "symbols",
            "test_dir"
          ],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "validators.governance_validator": {
      "fqname": "validators.governance_validator",
      "type": "module",
      "description": "Validation Rules (validators)",
      "tags": [
        "validation",
        "governance"
      ],
      "source_file": "validators\\governance_validator.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "validators.governance_validator",
        "module": "validators.governance_validator",
        "name": "validators.governance_validator",
        "type": "module",
        "lineno": 1,
        "source_file": "validators\\governance_validator.py",
        "description": "Validation Rules (validators)",
        "docstring_full": "Validation Rules (validators)\n\nApplies all governance rules to the entity graph.\nIncludes docstring checks, test coverage, orphan detection, etc.\n\n@tags: [\"validation\", \"governance\"]\n@status: \"stable\"\n@visibility: \"public\"",
        "tags": [
          "validation",
          "governance"
        ],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": "stable",
        "visibility": "public",
        "docstring_present": true,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "validators.governance_validator.validate_governance_rules": {
      "fqname": "validators.governance_validator.validate_governance_rules",
      "type": "function",
      "description": "Run all rule checks over the graph.",
      "tags": [],
      "source_file": "validators\\governance_validator.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "validators.governance_validator.validate_governance_rules",
        "module": "validators.governance_validator",
        "name": "validate_governance_rules",
        "type": "function",
        "lineno": 15,
        "source_file": "validators\\governance_validator.py",
        "description": "Run all rule checks over the graph.",
        "docstring_full": "Run all rule checks over the graph.\n\nParameters:\n    graph (dict): Entity graph keyed by fqname\n\nReturns:\n    tuple: (violations dict, issue counter)",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "graph"
          ],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_crossfile": {
      "fqname": "test_crossfile",
      "type": "module",
      "description": "",
      "tags": [],
      "source_file": "test_crossfile.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_crossfile",
        "module": "test_crossfile",
        "name": "test_crossfile",
        "type": "module",
        "lineno": 1,
        "source_file": "test_crossfile.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_crossfile.OUTPUT_DIR": {
      "fqname": "test_crossfile.OUTPUT_DIR",
      "type": "variable",
      "description": "",
      "tags": [],
      "source_file": "test_crossfile.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": "",
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_crossfile.OUTPUT_DIR",
        "module": "test_crossfile",
        "name": "OUTPUT_DIR",
        "type": "variable",
        "lineno": 8,
        "source_file": "test_crossfile.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": "",
        "deprecated": false,
        "status": "",
        "visibility": "",
        "docstring_present": false,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_crossfile.INPUT_JSON": {
      "fqname": "test_crossfile.INPUT_JSON",
      "type": "variable",
      "description": "",
      "tags": [],
      "source_file": "test_crossfile.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": "",
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_crossfile.INPUT_JSON",
        "module": "test_crossfile",
        "name": "INPUT_JSON",
        "type": "variable",
        "lineno": 9,
        "source_file": "test_crossfile.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": "",
        "deprecated": false,
        "status": "",
        "visibility": "",
        "docstring_present": false,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_crossfile.setup_module": {
      "fqname": "test_crossfile.setup_module",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "test_crossfile.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_crossfile.setup_module",
        "module": "test_crossfile",
        "name": "setup_module",
        "type": "function",
        "lineno": 11,
        "source_file": "test_crossfile.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_crossfile.test_crossfile_linking_and_export": {
      "fqname": "test_crossfile.test_crossfile_linking_and_export",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "test_crossfile.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_crossfile.test_crossfile_linking_and_export",
        "module": "test_crossfile",
        "name": "test_crossfile_linking_and_export",
        "type": "function",
        "lineno": 15,
        "source_file": "test_crossfile.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_entity_graph_builder": {
      "fqname": "test_entity_graph_builder",
      "type": "module",
      "description": "",
      "tags": [],
      "source_file": "test_entity_graph_builder.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_entity_graph_builder",
        "module": "test_entity_graph_builder",
        "name": "test_entity_graph_builder",
        "type": "module",
        "lineno": 1,
        "source_file": "test_entity_graph_builder.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_entity_graph_builder.test_valid_entity_graph_build": {
      "fqname": "test_entity_graph_builder.test_valid_entity_graph_build",
      "type": "function",
      "description": "Valid entities yield expected graph nodes with correct fields.",
      "tags": [],
      "source_file": "test_entity_graph_builder.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_entity_graph_builder.test_valid_entity_graph_build",
        "module": "test_entity_graph_builder",
        "name": "test_valid_entity_graph_build",
        "type": "function",
        "lineno": 6,
        "source_file": "test_entity_graph_builder.py",
        "description": "Valid entities yield expected graph nodes with correct fields.",
        "docstring_full": "Valid entities yield expected graph nodes with correct fields.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_entity_graph_builder.test_empty_input_returns_empty_graph": {
      "fqname": "test_entity_graph_builder.test_empty_input_returns_empty_graph",
      "type": "function",
      "description": "Empty input yields an empty graph dict.",
      "tags": [],
      "source_file": "test_entity_graph_builder.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_entity_graph_builder.test_empty_input_returns_empty_graph",
        "module": "test_entity_graph_builder",
        "name": "test_empty_input_returns_empty_graph",
        "type": "function",
        "lineno": 19,
        "source_file": "test_entity_graph_builder.py",
        "description": "Empty input yields an empty graph dict.",
        "docstring_full": "Empty input yields an empty graph dict.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_entity_graph_builder.test_missing_required_fqname_raises": {
      "fqname": "test_entity_graph_builder.test_missing_required_fqname_raises",
      "type": "function",
      "description": "Entity missing 'fqname' should raise KeyError.",
      "tags": [],
      "source_file": "test_entity_graph_builder.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_entity_graph_builder.test_missing_required_fqname_raises",
        "module": "test_entity_graph_builder",
        "name": "test_missing_required_fqname_raises",
        "type": "function",
        "lineno": 23,
        "source_file": "test_entity_graph_builder.py",
        "description": "Entity missing 'fqname' should raise KeyError.",
        "docstring_full": "Entity missing 'fqname' should raise KeyError.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_entity_graph_builder.test_entity_not_dict_raises": {
      "fqname": "test_entity_graph_builder.test_entity_not_dict_raises",
      "type": "function",
      "description": "Non-dict entity in list should raise TypeError.",
      "tags": [],
      "source_file": "test_entity_graph_builder.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_entity_graph_builder.test_entity_not_dict_raises",
        "module": "test_entity_graph_builder",
        "name": "test_entity_not_dict_raises",
        "type": "function",
        "lineno": 29,
        "source_file": "test_entity_graph_builder.py",
        "description": "Non-dict entity in list should raise TypeError.",
        "docstring_full": "Non-dict entity in list should raise TypeError.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_entity_graph_builder.test_tags_must_be_list": {
      "fqname": "test_entity_graph_builder.test_tags_must_be_list",
      "type": "function",
      "description": "Entity with non-list 'tags' should raise ValueError.",
      "tags": [],
      "source_file": "test_entity_graph_builder.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_entity_graph_builder.test_tags_must_be_list",
        "module": "test_entity_graph_builder",
        "name": "test_tags_must_be_list",
        "type": "function",
        "lineno": 35,
        "source_file": "test_entity_graph_builder.py",
        "description": "Entity with non-list 'tags' should raise ValueError.",
        "docstring_full": "Entity with non-list 'tags' should raise ValueError.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_entity_graph_builder.test_duplicate_fqnames_overwrites_last": {
      "fqname": "test_entity_graph_builder.test_duplicate_fqnames_overwrites_last",
      "type": "function",
      "description": "Duplicate FQ names: last entity should overwrite prior.",
      "tags": [],
      "source_file": "test_entity_graph_builder.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_entity_graph_builder.test_duplicate_fqnames_overwrites_last",
        "module": "test_entity_graph_builder",
        "name": "test_duplicate_fqnames_overwrites_last",
        "type": "function",
        "lineno": 41,
        "source_file": "test_entity_graph_builder.py",
        "description": "Duplicate FQ names: last entity should overwrite prior.",
        "docstring_full": "Duplicate FQ names: last entity should overwrite prior.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_entity_graph_builder.test_extra_fields_are_preserved": {
      "fqname": "test_entity_graph_builder.test_extra_fields_are_preserved",
      "type": "function",
      "description": "Entities with extra/unknown fields retain them in output.",
      "tags": [],
      "source_file": "test_entity_graph_builder.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_entity_graph_builder.test_extra_fields_are_preserved",
        "module": "test_entity_graph_builder",
        "name": "test_extra_fields_are_preserved",
        "type": "function",
        "lineno": 50,
        "source_file": "test_entity_graph_builder.py",
        "description": "Entities with extra/unknown fields retain them in output.",
        "docstring_full": "Entities with extra/unknown fields retain them in output.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_entity_graph_builder.test_tags_none_raises": {
      "fqname": "test_entity_graph_builder.test_tags_none_raises",
      "type": "function",
      "description": "Entity with 'tags' set to None should raise ValueError.",
      "tags": [],
      "source_file": "test_entity_graph_builder.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_entity_graph_builder.test_tags_none_raises",
        "module": "test_entity_graph_builder",
        "name": "test_tags_none_raises",
        "type": "function",
        "lineno": 59,
        "source_file": "test_entity_graph_builder.py",
        "description": "Entity with 'tags' set to None should raise ValueError.",
        "docstring_full": "Entity with 'tags' set to None should raise ValueError.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_exporters_edgecases": {
      "fqname": "test_exporters_edgecases",
      "type": "module",
      "description": "",
      "tags": [],
      "source_file": "test_exporters_edgecases.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_exporters_edgecases",
        "module": "test_exporters_edgecases",
        "name": "test_exporters_edgecases",
        "type": "module",
        "lineno": 1,
        "source_file": "test_exporters_edgecases.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_exporters_edgecases.OUTPUT_DIR": {
      "fqname": "test_exporters_edgecases.OUTPUT_DIR",
      "type": "variable",
      "description": "",
      "tags": [],
      "source_file": "test_exporters_edgecases.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": "",
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_exporters_edgecases.OUTPUT_DIR",
        "module": "test_exporters_edgecases",
        "name": "OUTPUT_DIR",
        "type": "variable",
        "lineno": 8,
        "source_file": "test_exporters_edgecases.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": "",
        "deprecated": false,
        "status": "",
        "visibility": "",
        "docstring_present": false,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_exporters_edgecases.INPUT_JSON": {
      "fqname": "test_exporters_edgecases.INPUT_JSON",
      "type": "variable",
      "description": "",
      "tags": [],
      "source_file": "test_exporters_edgecases.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": "",
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_exporters_edgecases.INPUT_JSON",
        "module": "test_exporters_edgecases",
        "name": "INPUT_JSON",
        "type": "variable",
        "lineno": 9,
        "source_file": "test_exporters_edgecases.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": "",
        "deprecated": false,
        "status": "",
        "visibility": "",
        "docstring_present": false,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_exporters_edgecases.setup_module": {
      "fqname": "test_exporters_edgecases.setup_module",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "test_exporters_edgecases.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_exporters_edgecases.setup_module",
        "module": "test_exporters_edgecases",
        "name": "setup_module",
        "type": "function",
        "lineno": 11,
        "source_file": "test_exporters_edgecases.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_exporters_edgecases.test_exporter_handles_edge_cases": {
      "fqname": "test_exporters_edgecases.test_exporter_handles_edge_cases",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "test_exporters_edgecases.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_exporters_edgecases.test_exporter_handles_edge_cases",
        "module": "test_exporters_edgecases",
        "name": "test_exporter_handles_edge_cases",
        "type": "function",
        "lineno": 15,
        "source_file": "test_exporters_edgecases.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_json_exporter": {
      "fqname": "test_json_exporter",
      "type": "module",
      "description": "",
      "tags": [],
      "source_file": "test_json_exporter.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_json_exporter",
        "module": "test_json_exporter",
        "name": "test_json_exporter",
        "type": "module",
        "lineno": 1,
        "source_file": "test_json_exporter.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_json_exporter.test_export_entity_graph_writes_files": {
      "fqname": "test_json_exporter.test_export_entity_graph_writes_files",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "test_json_exporter.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_json_exporter.test_export_entity_graph_writes_files",
        "module": "test_json_exporter",
        "name": "test_export_entity_graph_writes_files",
        "type": "function",
        "lineno": 6,
        "source_file": "test_json_exporter.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [
            "tmp_path"
          ],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_linkage_builder": {
      "fqname": "test_linkage_builder",
      "type": "module",
      "description": "",
      "tags": [],
      "source_file": "test_linkage_builder.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_linkage_builder",
        "module": "test_linkage_builder",
        "name": "test_linkage_builder",
        "type": "module",
        "lineno": 1,
        "source_file": "test_linkage_builder.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_linkage_builder.test_injects_call_link_between_functions": {
      "fqname": "test_linkage_builder.test_injects_call_link_between_functions",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "test_linkage_builder.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_linkage_builder.test_injects_call_link_between_functions",
        "module": "test_linkage_builder",
        "name": "test_injects_call_link_between_functions",
        "type": "function",
        "lineno": 6,
        "source_file": "test_linkage_builder.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_linkage_builder.test_missing_calls_field_results_in_no_links": {
      "fqname": "test_linkage_builder.test_missing_calls_field_results_in_no_links",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "test_linkage_builder.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_linkage_builder.test_missing_calls_field_results_in_no_links",
        "module": "test_linkage_builder",
        "name": "test_missing_calls_field_results_in_no_links",
        "type": "function",
        "lineno": 26,
        "source_file": "test_linkage_builder.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_linkage_builder.test_nonexistent_target_is_ignored": {
      "fqname": "test_linkage_builder.test_nonexistent_target_is_ignored",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "test_linkage_builder.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_linkage_builder.test_nonexistent_target_is_ignored",
        "module": "test_linkage_builder",
        "name": "test_nonexistent_target_is_ignored",
        "type": "function",
        "lineno": 38,
        "source_file": "test_linkage_builder.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_linkage_builder.test_empty_graph_returns_empty": {
      "fqname": "test_linkage_builder.test_empty_graph_returns_empty",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "test_linkage_builder.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_linkage_builder.test_empty_graph_returns_empty",
        "module": "test_linkage_builder",
        "name": "test_empty_graph_returns_empty",
        "type": "function",
        "lineno": 52,
        "source_file": "test_linkage_builder.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_pipeline": {
      "fqname": "test_pipeline",
      "type": "module",
      "description": "Smoke test for the Project Intelligence Layer (PIL) pipeline.",
      "tags": [],
      "source_file": "test_pipeline.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_pipeline",
        "module": "test_pipeline",
        "name": "test_pipeline",
        "type": "module",
        "lineno": 1,
        "source_file": "test_pipeline.py",
        "description": "Smoke test for the Project Intelligence Layer (PIL) pipeline.",
        "docstring_full": "Smoke test for the Project Intelligence Layer (PIL) pipeline.\n\nValidates that:\n- The pipeline executes without error\n- `entity_graph.json` is created\n- At least one function node is present\n- Required metadata fields exist on a sample node\n\nThis test does not validate semantic links or coverage logic — those are handled in their own modules.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_pipeline.test_pipeline_generates_valid_entity_graph": {
      "fqname": "test_pipeline.test_pipeline_generates_valid_entity_graph",
      "type": "function",
      "description": "End-to-end test of the PIL pipeline on real source code.",
      "tags": [],
      "source_file": "test_pipeline.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_pipeline.test_pipeline_generates_valid_entity_graph",
        "module": "test_pipeline",
        "name": "test_pipeline_generates_valid_entity_graph",
        "type": "function",
        "lineno": 26,
        "source_file": "test_pipeline.py",
        "description": "End-to-end test of the PIL pipeline on real source code.",
        "docstring_full": "End-to-end test of the PIL pipeline on real source code.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_usage_map_builder": {
      "fqname": "test_usage_map_builder",
      "type": "module",
      "description": "",
      "tags": [],
      "source_file": "test_usage_map_builder.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_usage_map_builder",
        "module": "test_usage_map_builder",
        "name": "test_usage_map_builder",
        "type": "module",
        "lineno": 1,
        "source_file": "test_usage_map_builder.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_usage_map_builder.test_empty_graph_returns_empty_map": {
      "fqname": "test_usage_map_builder.test_empty_graph_returns_empty_map",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "test_usage_map_builder.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_usage_map_builder.test_empty_graph_returns_empty_map",
        "module": "test_usage_map_builder",
        "name": "test_empty_graph_returns_empty_map",
        "type": "function",
        "lineno": 5,
        "source_file": "test_usage_map_builder.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_usage_map_builder.test_single_node_no_links_produces_self_usage": {
      "fqname": "test_usage_map_builder.test_single_node_no_links_produces_self_usage",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "test_usage_map_builder.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_usage_map_builder.test_single_node_no_links_produces_self_usage",
        "module": "test_usage_map_builder",
        "name": "test_single_node_no_links_produces_self_usage",
        "type": "function",
        "lineno": 9,
        "source_file": "test_usage_map_builder.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_usage_map_builder.test_call_links_are_registered_as_usage": {
      "fqname": "test_usage_map_builder.test_call_links_are_registered_as_usage",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "test_usage_map_builder.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_usage_map_builder.test_call_links_are_registered_as_usage",
        "module": "test_usage_map_builder",
        "name": "test_call_links_are_registered_as_usage",
        "type": "function",
        "lineno": 20,
        "source_file": "test_usage_map_builder.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "test_usage_map_builder.test_multiple_link_types_handled_correctly": {
      "fqname": "test_usage_map_builder.test_multiple_link_types_handled_correctly",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "test_usage_map_builder.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "test_usage_map_builder.test_multiple_link_types_handled_correctly",
        "module": "test_usage_map_builder",
        "name": "test_multiple_link_types_handled_correctly",
        "type": "function",
        "lineno": 35,
        "source_file": "test_usage_map_builder.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "sample_input.everything": {
      "fqname": "sample_input.everything",
      "type": "module",
      "description": "Module-level docstring for everything.py",
      "tags": [],
      "source_file": "sample_input\\everything.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "sample_input.everything",
        "module": "sample_input.everything",
        "name": "sample_input.everything",
        "type": "module",
        "lineno": 1,
        "source_file": "sample_input\\everything.py",
        "description": "Module-level docstring for everything.py",
        "docstring_full": "Module-level docstring for everything.py",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "sample_input.everything.MY_CONSTANT": {
      "fqname": "sample_input.everything.MY_CONSTANT",
      "type": "variable",
      "description": "The answer to everything",
      "tags": [],
      "source_file": "sample_input\\everything.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": "",
      "is_orphaned": true,
      "metadata": {
        "fqname": "sample_input.everything.MY_CONSTANT",
        "module": "sample_input.everything",
        "name": "MY_CONSTANT",
        "type": "variable",
        "lineno": 5,
        "source_file": "sample_input\\everything.py",
        "description": "The answer to everything",
        "docstring_full": "The answer to everything",
        "tags": [],
        "linked_journal_entry": "",
        "deprecated": false,
        "status": "",
        "visibility": "",
        "docstring_present": true,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "sample_input.everything.top_level_function": {
      "fqname": "sample_input.everything.top_level_function",
      "type": "function",
      "description": "This is a top-level function.",
      "tags": [],
      "source_file": "sample_input\\everything.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "sample_input.everything.top_level_function",
        "module": "sample_input.everything",
        "name": "top_level_function",
        "type": "function",
        "lineno": 7,
        "source_file": "sample_input\\everything.py",
        "description": "This is a top-level function.",
        "docstring_full": "This is a top-level function.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "sample_input.everything.MyClass": {
      "fqname": "sample_input.everything.MyClass",
      "type": "class",
      "description": "A simple class.",
      "tags": [],
      "source_file": "sample_input\\everything.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "sample_input.everything.MyClass",
        "module": "sample_input.everything",
        "name": "MyClass",
        "type": "class",
        "lineno": 11,
        "source_file": "sample_input\\everything.py",
        "description": "A simple class.",
        "docstring_full": "A simple class.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "sample_input.everything._private_function": {
      "fqname": "sample_input.everything._private_function",
      "type": "function",
      "description": "Private function doc.",
      "tags": [],
      "source_file": "sample_input\\everything.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "sample_input.everything._private_function",
        "module": "sample_input.everything",
        "name": "_private_function",
        "type": "function",
        "lineno": 25,
        "source_file": "sample_input\\everything.py",
        "description": "Private function doc.",
        "docstring_full": "Private function doc.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "sample_input.everything.method": {
      "fqname": "sample_input.everything.method",
      "type": "method",
      "description": "Class method doc.",
      "tags": [],
      "source_file": "sample_input\\everything.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "sample_input.everything.method",
        "module": "sample_input.everything",
        "name": "method",
        "type": "method",
        "lineno": 16,
        "source_file": "sample_input\\everything.py",
        "description": "Class method doc.",
        "docstring_full": "Class method doc.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [
            "self"
          ],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "sample_input.everything.static_method": {
      "fqname": "sample_input.everything.static_method",
      "type": "method",
      "description": "Static method doc.",
      "tags": [],
      "source_file": "sample_input\\everything.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "sample_input.everything.static_method",
        "module": "sample_input.everything",
        "name": "static_method",
        "type": "method",
        "lineno": 21,
        "source_file": "sample_input\\everything.py",
        "description": "Static method doc.",
        "docstring_full": "Static method doc.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "sample_input.test_roundtrip": {
      "fqname": "sample_input.test_roundtrip",
      "type": "module",
      "description": "",
      "tags": [],
      "source_file": "sample_input\\test_roundtrip.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "sample_input.test_roundtrip",
        "module": "sample_input.test_roundtrip",
        "name": "sample_input.test_roundtrip",
        "type": "module",
        "lineno": 1,
        "source_file": "sample_input\\test_roundtrip.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "sample_input.test_roundtrip.INPUT_JSON": {
      "fqname": "sample_input.test_roundtrip.INPUT_JSON",
      "type": "variable",
      "description": "",
      "tags": [],
      "source_file": "sample_input\\test_roundtrip.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": "",
      "is_orphaned": true,
      "metadata": {
        "fqname": "sample_input.test_roundtrip.INPUT_JSON",
        "module": "sample_input.test_roundtrip",
        "name": "INPUT_JSON",
        "type": "variable",
        "lineno": 9,
        "source_file": "sample_input\\test_roundtrip.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": "",
        "deprecated": false,
        "status": "",
        "visibility": "",
        "docstring_present": false,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "sample_input.test_roundtrip.DIR1": {
      "fqname": "sample_input.test_roundtrip.DIR1",
      "type": "variable",
      "description": "",
      "tags": [],
      "source_file": "sample_input\\test_roundtrip.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": "",
      "is_orphaned": true,
      "metadata": {
        "fqname": "sample_input.test_roundtrip.DIR1",
        "module": "sample_input.test_roundtrip",
        "name": "DIR1",
        "type": "variable",
        "lineno": 11,
        "source_file": "sample_input\\test_roundtrip.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": "",
        "deprecated": false,
        "status": "",
        "visibility": "",
        "docstring_present": false,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "sample_input.test_roundtrip.DIR2": {
      "fqname": "sample_input.test_roundtrip.DIR2",
      "type": "variable",
      "description": "",
      "tags": [],
      "source_file": "sample_input\\test_roundtrip.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": "",
      "is_orphaned": true,
      "metadata": {
        "fqname": "sample_input.test_roundtrip.DIR2",
        "module": "sample_input.test_roundtrip",
        "name": "DIR2",
        "type": "variable",
        "lineno": 12,
        "source_file": "sample_input\\test_roundtrip.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": "",
        "deprecated": false,
        "status": "",
        "visibility": "",
        "docstring_present": false,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "sample_input.test_roundtrip.setup_module": {
      "fqname": "sample_input.test_roundtrip.setup_module",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "sample_input\\test_roundtrip.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "sample_input.test_roundtrip.setup_module",
        "module": "sample_input.test_roundtrip",
        "name": "setup_module",
        "type": "function",
        "lineno": 14,
        "source_file": "sample_input\\test_roundtrip.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "sample_input.test_roundtrip.test_exporter_is_idempotent": {
      "fqname": "sample_input.test_roundtrip.test_exporter_is_idempotent",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "sample_input\\test_roundtrip.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "sample_input.test_roundtrip.test_exporter_is_idempotent",
        "module": "sample_input.test_roundtrip",
        "name": "test_exporter_is_idempotent",
        "type": "function",
        "lineno": 19,
        "source_file": "sample_input\\test_roundtrip.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "rebuild_pil": {
      "fqname": "rebuild_pil",
      "type": "module",
      "description": "Entry point to run the PIL metadata pipeline.",
      "tags": [],
      "source_file": "rebuild_pil.py",
      "test_coverage": false,
      "docstring_present": true,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "rebuild_pil",
        "module": "rebuild_pil",
        "name": "rebuild_pil",
        "type": "module",
        "lineno": 1,
        "source_file": "rebuild_pil.py",
        "description": "Entry point to run the PIL metadata pipeline.",
        "docstring_full": "Entry point to run the PIL metadata pipeline.\n\nDetects context (standalone vs embedded), adjusts sys.path, and invokes the main runner.",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": true,
        "metadata": {}
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    },
    "rebuild_pil.main": {
      "fqname": "rebuild_pil.main",
      "type": "function",
      "description": "",
      "tags": [],
      "source_file": "rebuild_pil.py",
      "test_coverage": false,
      "docstring_present": false,
      "linked_journal_entry": null,
      "is_orphaned": true,
      "metadata": {
        "fqname": "rebuild_pil.main",
        "module": "rebuild_pil",
        "name": "main",
        "type": "function",
        "lineno": 11,
        "source_file": "rebuild_pil.py",
        "description": "",
        "docstring_full": "",
        "tags": [],
        "linked_journal_entry": null,
        "deprecated": false,
        "status": null,
        "visibility": null,
        "docstring_present": false,
        "metadata": {
          "args": [],
          "returns": null
        }
      },
      "links": [],
      "called_by_fqns": [],
      "calls_fqns": []
    }
  }
}